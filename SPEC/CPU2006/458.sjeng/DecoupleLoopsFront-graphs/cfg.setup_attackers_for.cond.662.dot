digraph "CFG for 'setup_attackers_for.cond' function" {
	label="CFG for 'setup_attackers_for.cond' function";

	Node0x1175130 [shape=record,label="{newFuncRoot}"];
	Node0x1175130 -> Node0x1175270;
	Node0x1175180 [shape=record,label="{for.cond.55.preheader.loopexit.exitStub}"];
	Node0x11751d0 [shape=record,label="{if.then.exitStub}"];
	Node0x1175220 [shape=record,label="{if.then.10.exitStub}"];
	Node0x1175270 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x1175270:s0 -> Node0x11752c0;
	Node0x1175270:s1 -> Node0x1175180;
	Node0x11752c0 [shape=record,label="{it_for.body|{<s0>def|<s1>5|<s2>6}}"];
	Node0x11752c0:s0 -> Node0x1175310;
	Node0x11752c0:s1 -> Node0x11751d0;
	Node0x11752c0:s2 -> Node0x1175220;
	Node0x1175310 [shape=record,label="{pd_while.cond.preheader}"];
	Node0x1175310 -> Node0x1175360;
	Node0x1175360 [shape=record,label="{pd_while.cond|{<s0>def|<s1>13|<s2>7|<s3>9|<s4>8|<s5>10}}"];
	Node0x1175360:s0 -> Node0x11755e0;
	Node0x1175360:s1 -> Node0x1175590;
	Node0x1175360:s2 -> Node0x11754f0;
	Node0x1175360:s3 -> Node0x11754a0;
	Node0x1175360:s4 -> Node0x1175400;
	Node0x1175360:s5 -> Node0x11753b0;
	Node0x11753b0 [shape=record,label="{pd_while.cond.if.then.34_crit_edge.2}"];
	Node0x11753b0 -> Node0x1175450;
	Node0x1175400 [shape=record,label="{pd_while.cond.if.then.34_crit_edge}"];
	Node0x1175400 -> Node0x1175450;
	Node0x1175450 [shape=record,label="{pd_if.then.34}"];
	Node0x1175450 -> Node0x1175630;
	Node0x11754a0 [shape=record,label="{pd_while.cond.if.then.22_crit_edge.1}"];
	Node0x11754a0 -> Node0x1175540;
	Node0x11754f0 [shape=record,label="{pd_while.cond.if.then.22_crit_edge}"];
	Node0x11754f0 -> Node0x1175540;
	Node0x1175540 [shape=record,label="{pd_if.then.22}"];
	Node0x1175540 -> Node0x1175630;
	Node0x1175590 [shape=record,label="{pd_if.end.46}"];
	Node0x1175590 -> Node0x1175360;
	Node0x11755e0 [shape=record,label="{pd_for.inc.loopexit}"];
	Node0x11755e0 -> Node0x1175630;
	Node0x1175630 [shape=record,label="{it_for.inc}"];
	Node0x1175630 -> Node0x1175270;
}
