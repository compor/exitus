digraph "CFG for 'quantum_sigma_z_for.cond' function" {
	label="CFG for 'quantum_sigma_z_for.cond' function";

	Node0x165c8d0 [shape=record,label="{newFuncRoot}"];
	Node0x165c8d0 -> Node0x165c970;
	Node0x165c920 [shape=record,label="{for.end.exitStub}"];
	Node0x165c970 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x165c970:s0 -> Node0x165c9c0;
	Node0x165c970:s1 -> Node0x165c920;
	Node0x165c9c0 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x165c9c0:s0 -> Node0x165ca60;
	Node0x165c9c0:s1 -> Node0x165ca10;
	Node0x165ca10 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x165ca10 -> Node0x165cba0;
	Node0x165ca60 [shape=record,label="{pd_if.then.2|{<s0>T|<s1>F}}"];
	Node0x165ca60:s0 -> Node0x165cb00;
	Node0x165ca60:s1 -> Node0x165cab0;
	Node0x165cab0 [shape=record,label="{pd_if.then.2.complex_mul_cont_crit_edge}"];
	Node0x165cab0 -> Node0x165cb50;
	Node0x165cb00 [shape=record,label="{pd_complex_mul_libcall}"];
	Node0x165cb00 -> Node0x165cb50;
	Node0x165cb50 [shape=record,label="{pd_complex_mul_cont}"];
	Node0x165cb50 -> Node0x165cba0;
	Node0x165cba0 [shape=record,label="{it_for.inc}"];
	Node0x165cba0 -> Node0x165c970;
}
