digraph "CFG for 'quantum_cond_phase_for.cond' function" {
	label="CFG for 'quantum_cond_phase_for.cond' function";

	Node0x16bb050 [shape=record,label="{newFuncRoot}"];
	Node0x16bb050 -> Node0x16bb930;
	Node0x16bb8e0 [shape=record,label="{for.end.exitStub}"];
	Node0x16bb930 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x16bb930:s0 -> Node0x16bb980;
	Node0x16bb930:s1 -> Node0x16bb8e0;
	Node0x16bb980 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x16bb980:s0 -> Node0x16bba20;
	Node0x16bb980:s1 -> Node0x16bb9d0;
	Node0x16bb9d0 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x16bb9d0 -> Node0x16bbc00;
	Node0x16bba20 [shape=record,label="{pd_if.then.7|{<s0>T|<s1>F}}"];
	Node0x16bba20:s0 -> Node0x16bbac0;
	Node0x16bba20:s1 -> Node0x16bba70;
	Node0x16bba70 [shape=record,label="{pd_if.then.7.for.inc_crit_edge}"];
	Node0x16bba70 -> Node0x16bbc00;
	Node0x16bbac0 [shape=record,label="{pd_if.then.16|{<s0>T|<s1>F}}"];
	Node0x16bbac0:s0 -> Node0x16bbb60;
	Node0x16bbac0:s1 -> Node0x16bbb10;
	Node0x16bbb10 [shape=record,label="{pd_if.then.16.complex_mul_cont_crit_edge}"];
	Node0x16bbb10 -> Node0x16bbbb0;
	Node0x16bbb60 [shape=record,label="{pd_complex_mul_libcall}"];
	Node0x16bbb60 -> Node0x16bbbb0;
	Node0x16bbbb0 [shape=record,label="{pd_complex_mul_cont}"];
	Node0x16bbbb0 -> Node0x16bbc00;
	Node0x16bbc00 [shape=record,label="{it_for.inc}"];
	Node0x16bbc00 -> Node0x16bb930;
}
