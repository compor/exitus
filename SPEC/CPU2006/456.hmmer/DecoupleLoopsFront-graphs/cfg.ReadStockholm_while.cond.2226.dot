digraph "CFG for 'ReadStockholm_while.cond' function" {
	label="CFG for 'ReadStockholm_while.cond' function";

	Node0x34c1b20 [shape=record,label="{newFuncRoot}"];
	Node0x34c1b20 -> Node0x34c1c10;
	Node0x34c1b70 [shape=record,label="{while.cond.while.end.75_crit_edge.exitStub}"];
	Node0x34c1bc0 [shape=record,label="{if.else.52.while.end.75_crit_edge.exitStub}"];
	Node0x34c1c10 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x34c1c10:s0 -> Node0x34c1c60;
	Node0x34c1c10:s1 -> Node0x34c1b70;
	Node0x34c1c60 [shape=record,label="{pd_while.cond.13.preheader}"];
	Node0x34c1c60 -> Node0x34c1cb0;
	Node0x34c1cb0 [shape=record,label="{it_while.cond.13|{<s0>T|<s1>F}}"];
	Node0x34c1cb0:s0 -> Node0x34c2430;
	Node0x34c1cb0:s1 -> Node0x34c1d00;
	Node0x34c1d00 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0x34c1d00:s0 -> Node0x34c23e0;
	Node0x34c1d00:s1 -> Node0x34c1d50;
	Node0x34c1d50 [shape=record,label="{it_while.end|{<s0>T|<s1>F}}"];
	Node0x34c1d50:s0 -> Node0x34c1ee0;
	Node0x34c1d50:s1 -> Node0x34c1da0;
	Node0x34c1da0 [shape=record,label="{it_if.else.52|{<s0>T|<s1>F}}"];
	Node0x34c1da0:s0 -> Node0x34c1bc0;
	Node0x34c1da0:s1 -> Node0x34c1df0;
	Node0x34c1df0 [shape=record,label="{pd_if.else.57|{<s0>T|<s1>F}}"];
	Node0x34c1df0:s0 -> Node0x34c1e90;
	Node0x34c1df0:s1 -> Node0x34c1e40;
	Node0x34c1e40 [shape=record,label="{pd_if.else.62}"];
	Node0x34c1e40 -> Node0x34c21b0;
	Node0x34c1e90 [shape=record,label="{pd_if.else.57.while.cond.backedge_crit_edge}"];
	Node0x34c1e90 -> Node0x34c2390;
	Node0x34c1ee0 [shape=record,label="{pd_if.then.23|{<s0>T|<s1>F}}"];
	Node0x34c1ee0:s0 -> Node0x34c2160;
	Node0x34c1ee0:s1 -> Node0x34c1f30;
	Node0x34c1f30 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x34c1f30:s0 -> Node0x34c2110;
	Node0x34c1f30:s1 -> Node0x34c1f80;
	Node0x34c1f80 [shape=record,label="{pd_if.else.34|{<s0>T|<s1>F}}"];
	Node0x34c1f80:s0 -> Node0x34c20c0;
	Node0x34c1f80:s1 -> Node0x34c1fd0;
	Node0x34c1fd0 [shape=record,label="{pd_if.else.40|{<s0>T|<s1>F}}"];
	Node0x34c1fd0:s0 -> Node0x34c2070;
	Node0x34c1fd0:s1 -> Node0x34c2020;
	Node0x34c2020 [shape=record,label="{pd_if.else.46}"];
	Node0x34c2020 -> Node0x34c21b0;
	Node0x34c2070 [shape=record,label="{pd_if.then.44}"];
	Node0x34c2070 -> Node0x34c21b0;
	Node0x34c20c0 [shape=record,label="{pd_if.then.38}"];
	Node0x34c20c0 -> Node0x34c21b0;
	Node0x34c2110 [shape=record,label="{pd_if.then.32}"];
	Node0x34c2110 -> Node0x34c21b0;
	Node0x34c2160 [shape=record,label="{pd_if.then.27}"];
	Node0x34c2160 -> Node0x34c21b0;
	Node0x34c21b0 [shape=record,label="{pd_if.end.66|{<s0>T|<s1>F}}"];
	Node0x34c21b0:s0 -> Node0x34c2250;
	Node0x34c21b0:s1 -> Node0x34c2200;
	Node0x34c2200 [shape=record,label="{pd_if.end.66.while.cond.backedge_crit_edge}"];
	Node0x34c2200 -> Node0x34c2390;
	Node0x34c2250 [shape=record,label="{pd_if.then.69|{<s0>T|<s1>F}}"];
	Node0x34c2250:s0 -> Node0x34c22f0;
	Node0x34c2250:s1 -> Node0x34c22a0;
	Node0x34c22a0 [shape=record,label="{pd_cond.false}"];
	Node0x34c22a0 -> Node0x34c2340;
	Node0x34c22f0 [shape=record,label="{pd_if.then.69.cond.end_crit_edge}"];
	Node0x34c22f0 -> Node0x34c2340;
	Node0x34c2340 [shape=record,label="{pd_cond.end}"];
	Node0x34c2340 -> Node0x34c2390;
	Node0x34c2390 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x34c2390 -> Node0x34c1c10;
	Node0x34c23e0 [shape=record,label="{pd_lor.rhs.while.body.19_crit_edge}"];
	Node0x34c23e0 -> Node0x34c2480;
	Node0x34c2430 [shape=record,label="{pd_while.cond.13.while.body.19_crit_edge}"];
	Node0x34c2430 -> Node0x34c2480;
	Node0x34c2480 [shape=record,label="{it_while.body.19}"];
	Node0x34c2480 -> Node0x34c1cb0;
}
