digraph "CFG for 'parse_gs_while.cond' function" {
	label="CFG for 'parse_gs_while.cond' function";

	Node0x34c7ed0 [shape=record,label="{newFuncRoot}"];
	Node0x34c7ed0 -> Node0x34c7fc0;
	Node0x34c7f20 [shape=record,label="{while.cond.while.end_crit_edge.exitStub}"];
	Node0x34c7f70 [shape=record,label="{lor.rhs.while.end_crit_edge.exitStub}"];
	Node0x34c7fc0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x34c7fc0:s0 -> Node0x34c8010;
	Node0x34c7fc0:s1 -> Node0x34c7f20;
	Node0x34c8010 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x34c8010:s0 -> Node0x34c8100;
	Node0x34c8010:s1 -> Node0x34c8060;
	Node0x34c8060 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0x34c8060:s0 -> Node0x34c80b0;
	Node0x34c8060:s1 -> Node0x34c7f70;
	Node0x34c80b0 [shape=record,label="{pd_lor.rhs.while.body_crit_edge}"];
	Node0x34c80b0 -> Node0x34c8150;
	Node0x34c8100 [shape=record,label="{pd_land.rhs.while.body_crit_edge}"];
	Node0x34c8100 -> Node0x34c8150;
	Node0x34c8150 [shape=record,label="{it_while.body}"];
	Node0x34c8150 -> Node0x34c7fc0;
}
