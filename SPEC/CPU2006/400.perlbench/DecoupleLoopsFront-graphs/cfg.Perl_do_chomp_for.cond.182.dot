digraph "CFG for 'Perl_do_chomp_for.cond' function" {
	label="CFG for 'Perl_do_chomp_for.cond' function";

	Node0x4aff880 [shape=record,label="{newFuncRoot}"];
	Node0x4aff880 -> Node0x4aff920;
	Node0x4aff8d0 [shape=record,label="{return.loopexit.exitStub}"];
	Node0x4aff920 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x4aff920:s0 -> Node0x4aff970;
	Node0x4aff920:s1 -> Node0x4aff8d0;
	Node0x4aff970 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x4aff970:s0 -> Node0x4affa10;
	Node0x4aff970:s1 -> Node0x4aff9c0;
	Node0x4aff9c0 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x4aff9c0 -> Node0x4affb00;
	Node0x4affa10 [shape=record,label="{pd_land.lhs.true.30|{<s0>T|<s1>F}}"];
	Node0x4affa10:s0 -> Node0x4affab0;
	Node0x4affa10:s1 -> Node0x4affa60;
	Node0x4affa60 [shape=record,label="{pd_land.lhs.true.30.for.inc_crit_edge}"];
	Node0x4affa60 -> Node0x4affb00;
	Node0x4affab0 [shape=record,label="{pd_if.then.32}"];
	Node0x4affab0 -> Node0x4affb00;
	Node0x4affb00 [shape=record,label="{it_for.inc}"];
	Node0x4affb00 -> Node0x4aff920;
}
