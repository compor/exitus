digraph "CFG for 'Perl_utf8n_to_uvuni_while.cond' function" {
	label="CFG for 'Perl_utf8n_to_uvuni_while.cond' function";

	Node0x57d8aa0 [shape=record,label="{newFuncRoot}"];
	Node0x57d8aa0 -> Node0x57d8c80;
	Node0x57d8af0 [shape=record,label="{while.end.exitStub}"];
	Node0x57d8b40 [shape=record,label="{land.lhs.true.128.if.then.131_crit_edge.exitStub}"];
	Node0x57d8b90 [shape=record,label="{land.lhs.true.124.if.then.131_crit_edge.exitStub}"];
	Node0x57d8be0 [shape=record,label="{if.then.140.malformed.loopexit_crit_edge.exitStub}"];
	Node0x57d8c30 [shape=record,label="{if.then.143.malformed.loopexit_crit_edge.exitStub}"];
	Node0x57d8c80 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x57d8c80:s0 -> Node0x57d8cd0;
	Node0x57d8c80:s1 -> Node0x57d8af0;
	Node0x57d8cd0 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x57d8cd0:s0 -> Node0x57d8dc0;
	Node0x57d8cd0:s1 -> Node0x57d8d20;
	Node0x57d8d20 [shape=record,label="{it_land.lhs.true.128|{<s0>T|<s1>F}}"];
	Node0x57d8d20:s0 -> Node0x57d8d70;
	Node0x57d8d20:s1 -> Node0x57d8b40;
	Node0x57d8d70 [shape=record,label="{pd_land.lhs.true.128.if.else.133_crit_edge}"];
	Node0x57d8d70 -> Node0x57d8e60;
	Node0x57d8dc0 [shape=record,label="{it_land.lhs.true.124|{<s0>T|<s1>F}}"];
	Node0x57d8dc0:s0 -> Node0x57d8e10;
	Node0x57d8dc0:s1 -> Node0x57d8b90;
	Node0x57d8e10 [shape=record,label="{pd_land.lhs.true.124.if.else.133_crit_edge}"];
	Node0x57d8e10 -> Node0x57d8e60;
	Node0x57d8e60 [shape=record,label="{it_if.else.133|{<s0>T|<s1>F}}"];
	Node0x57d8e60:s0 -> Node0x57d8fa0;
	Node0x57d8e60:s1 -> Node0x57d8eb0;
	Node0x57d8eb0 [shape=record,label="{it_if.then.140|{<s0>T|<s1>F}}"];
	Node0x57d8eb0:s0 -> Node0x57d8f00;
	Node0x57d8eb0:s1 -> Node0x57d8be0;
	Node0x57d8f00 [shape=record,label="{it_if.then.143|{<s0>T|<s1>F}}"];
	Node0x57d8f00:s0 -> Node0x57d8f50;
	Node0x57d8f00:s1 -> Node0x57d8c30;
	Node0x57d8f50 [shape=record,label="{pd_if.then.143.while.cond.backedge_crit_edge}"];
	Node0x57d8f50 -> Node0x57d8ff0;
	Node0x57d8fa0 [shape=record,label="{pd_if.else.133.while.cond.backedge_crit_edge}"];
	Node0x57d8fa0 -> Node0x57d8ff0;
	Node0x57d8ff0 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x57d8ff0 -> Node0x57d8c80;
}
