digraph "CFG for 'PerlIOCrlf_get_cnt_while.cond' function" {
	label="CFG for 'PerlIOCrlf_get_cnt_while.cond' function";

	Node0x4db92f0 [shape=record,label="{newFuncRoot}"];
	Node0x4db92f0 -> Node0x4db94d0;
	Node0x4db9340 [shape=record,label="{while.end.if.end.63.loopexit1_crit_edge.exitStub}"];
	Node0x4db9390 [shape=record,label="{land.lhs.true.22.if.end.63.loopexit1_crit_edge.exitStub}"];
	Node0x4db93e0 [shape=record,label="{if.then.42.exitStub}"];
	Node0x4db9430 [shape=record,label="{if.end.63.loopexit.exitStub}"];
	Node0x4db9480 [shape=record,label="{if.then.34.exitStub}"];
	Node0x4db94d0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x4db94d0:s0 -> Node0x4db9570;
	Node0x4db94d0:s1 -> Node0x4db9520;
	Node0x4db9520 [shape=record,label="{pd_while.cond.while.end_crit_edge}"];
	Node0x4db9520 -> Node0x4db9610;
	Node0x4db9570 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x4db9570:s0 -> Node0x4db98e0;
	Node0x4db9570:s1 -> Node0x4db95c0;
	Node0x4db95c0 [shape=record,label="{pd_land.rhs.while.end_crit_edge}"];
	Node0x4db95c0 -> Node0x4db9610;
	Node0x4db9610 [shape=record,label="{it_while.end|{<s0>T|<s1>F}}"];
	Node0x4db9610:s0 -> Node0x4db9660;
	Node0x4db9610:s1 -> Node0x4db9340;
	Node0x4db9660 [shape=record,label="{it_land.lhs.true.22|{<s0>T|<s1>F}}"];
	Node0x4db9660:s0 -> Node0x4db96b0;
	Node0x4db9660:s1 -> Node0x4db9390;
	Node0x4db96b0 [shape=record,label="{pd_test.preheader}"];
	Node0x4db96b0 -> Node0x4db9700;
	Node0x4db9700 [shape=record,label="{it_test|{<s0>T|<s1>F}}"];
	Node0x4db9700:s0 -> Node0x4db9840;
	Node0x4db9700:s1 -> Node0x4db9750;
	Node0x4db9750 [shape=record,label="{it_if.else.38|{<s0>T|<s1>F}}"];
	Node0x4db9750:s0 -> Node0x4db93e0;
	Node0x4db9750:s1 -> Node0x4db97a0;
	Node0x4db97a0 [shape=record,label="{pd_if.else.45}"];
	Node0x4db97a0 -> Node0x64598a0;
	Node0x64598a0 [shape=record,label="{it_if.else.45.split4}"];
	Node0x64598a0 -> Node0x6459990;
	Node0x6459990 [shape=record,label="{pd_if.else.45.split3}"];
	Node0x6459990 -> Node0x64599e0;
	Node0x64599e0 [shape=record,label="{it_if.else.45.split2}"];
	Node0x64599e0 -> Node0x6459b70;
	Node0x6459b70 [shape=record,label="{pd_if.else.45.split1}"];
	Node0x6459b70 -> Node0x64577c0;
	Node0x64577c0 [shape=record,label="{it_if.else.45.split|{<s0>T|<s1>F}}"];
	Node0x64577c0:s0 -> Node0x4db97f0;
	Node0x64577c0:s1 -> Node0x4db9430;
	Node0x4db97f0 [shape=record,label="{pd_if.else.45.test_crit_edge}"];
	Node0x4db97f0 -> Node0x4db9700;
	Node0x4db9840 [shape=record,label="{it_if.then.30|{<s0>T|<s1>F}}"];
	Node0x4db9840:s0 -> Node0x4db9480;
	Node0x4db9840:s1 -> Node0x4db9890;
	Node0x4db9890 [shape=record,label="{it_if.else}"];
	Node0x4db9890 -> Node0x4db9930;
	Node0x4db98e0 [shape=record,label="{it_while.body}"];
	Node0x4db98e0 -> Node0x4db9930;
	Node0x4db9930 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x4db9930 -> Node0x4db94d0;
}
