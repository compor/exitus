digraph "CFG for 'Perl_instr_while.cond' function" {
	label="CFG for 'Perl_instr_while.cond' function";

	Node0x57fe480 [shape=record,label="{newFuncRoot}"];
	Node0x57fe480 -> Node0x57fedd0;
	Node0x57fe4d0 [shape=record,label="{return.loopexit1.exitStub}"];
	Node0x57fe520 [shape=record,label="{return.loopexit.exitStub}"];
	Node0x57fe570 [shape=record,label="{if.then.24.exitStub}"];
	Node0x57fedd0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x57fedd0:s0 -> Node0x57fee20;
	Node0x57fedd0:s1 -> Node0x57fe4d0;
	Node0x57fee20 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x57fee20:s0 -> Node0x57ff140;
	Node0x57fee20:s1 -> Node0x57fee70;
	Node0x57fee70 [shape=record,label="{pd_for.cond.preheader}"];
	Node0x57fee70 -> Node0x57feec0;
	Node0x57feec0 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x57feec0:s0 -> Node0x57fef60;
	Node0x57feec0:s1 -> Node0x57fef10;
	Node0x57fef10 [shape=record,label="{pd_for.end.loopexit}"];
	Node0x57fef10 -> Node0x57ff0a0;
	Node0x57fef60 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0x57fef60:s0 -> Node0x57fefb0;
	Node0x57fef60:s1 -> Node0x57fe520;
	Node0x57fefb0 [shape=record,label="{it_if.end.13|{<s0>T|<s1>F}}"];
	Node0x57fefb0:s0 -> Node0x57ff050;
	Node0x57fefb0:s1 -> Node0x57ff000;
	Node0x57ff000 [shape=record,label="{pd_if.end.13.for.cond_crit_edge}"];
	Node0x57ff000 -> Node0x57feec0;
	Node0x57ff050 [shape=record,label="{it_if.then.20}"];
	Node0x57ff050 -> Node0x57ff0a0;
	Node0x57ff0a0 [shape=record,label="{it_for.end|{<s0>T|<s1>F}}"];
	Node0x57ff0a0:s0 -> Node0x57ff0f0;
	Node0x57ff0a0:s1 -> Node0x57fe570;
	Node0x57ff0f0 [shape=record,label="{pd_for.end.while.cond.backedge_crit_edge}"];
	Node0x57ff0f0 -> Node0x57ff190;
	Node0x57ff140 [shape=record,label="{pd_while.body.while.cond.backedge_crit_edge}"];
	Node0x57ff140 -> Node0x57ff190;
	Node0x57ff190 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x57ff190 -> Node0x57fedd0;
}
