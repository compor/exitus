digraph "CFG for 'perl_parse_for.cond' function" {
	label="CFG for 'perl_parse_for.cond' function";

	Node0x4d3a360 [shape=record,label="{newFuncRoot}"];
	Node0x4d3a360 -> Node0x4d3a4f0;
	Node0x4d3a3b0 [shape=record,label="{for.cond.if.end.38.loopexit_crit_edge.exitStub}"];
	Node0x4d3a400 [shape=record,label="{lor.lhs.false.if.end.38.loopexit_crit_edge.exitStub}"];
	Node0x4d3a450 [shape=record,label="{land.lhs.true.17.if.end.38.loopexit_crit_edge.exitStub}"];
	Node0x4d3a4a0 [shape=record,label="{land.lhs.true.22.if.end.38.loopexit_crit_edge.exitStub}"];
	Node0x4d3a4f0 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x4d3a4f0:s0 -> Node0x4d3a540;
	Node0x4d3a4f0:s1 -> Node0x4d3a3b0;
	Node0x4d3a540 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0x4d3a540:s0 -> Node0x4d3a6d0;
	Node0x4d3a540:s1 -> Node0x4d3a590;
	Node0x4d3a590 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0x4d3a590:s0 -> Node0x4d3a5e0;
	Node0x4d3a590:s1 -> Node0x4d3a400;
	Node0x4d3a5e0 [shape=record,label="{it_land.lhs.true.17|{<s0>T|<s1>F}}"];
	Node0x4d3a5e0:s0 -> Node0x4d3a630;
	Node0x4d3a5e0:s1 -> Node0x4d3a450;
	Node0x4d3a630 [shape=record,label="{it_land.lhs.true.22|{<s0>T|<s1>F}}"];
	Node0x4d3a630:s0 -> Node0x4d3a680;
	Node0x4d3a630:s1 -> Node0x4d3a4a0;
	Node0x4d3a680 [shape=record,label="{pd_land.lhs.true.22.if.then.29_crit_edge}"];
	Node0x4d3a680 -> Node0x4d3a720;
	Node0x4d3a6d0 [shape=record,label="{pd_for.body.if.then.29_crit_edge}"];
	Node0x4d3a6d0 -> Node0x4d3a720;
	Node0x4d3a720 [shape=record,label="{it_if.then.29}"];
	Node0x4d3a720 -> Node0x4d3a770;
	Node0x4d3a770 [shape=record,label="{it_while.cond.32|{<s0>T|<s1>F}}"];
	Node0x4d3a770:s0 -> Node0x4d3a810;
	Node0x4d3a770:s1 -> Node0x4d3a7c0;
	Node0x4d3a7c0 [shape=record,label="{it_for.inc}"];
	Node0x4d3a7c0 -> Node0x4d3a4f0;
	Node0x4d3a810 [shape=record,label="{it_while.body.34}"];
	Node0x4d3a810 -> Node0x4d3a770;
}
