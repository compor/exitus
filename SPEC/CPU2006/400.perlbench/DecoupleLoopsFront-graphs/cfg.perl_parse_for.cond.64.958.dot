digraph "CFG for 'perl_parse_for.cond.64' function" {
	label="CFG for 'perl_parse_for.cond.64' function";

	Node0x4d36fd0 [shape=record,label="{newFuncRoot}"];
	Node0x4d36fd0 -> Node0x4d37160;
	Node0x4d37020 [shape=record,label="{for.cond.64.if.end.102.loopexit_crit_edge.exitStub}"];
	Node0x4d37070 [shape=record,label="{lor.lhs.false.74.if.end.102.loopexit_crit_edge.exitStub}"];
	Node0x4d370c0 [shape=record,label="{land.lhs.true.76.if.end.102.loopexit_crit_edge.exitStub}"];
	Node0x4d37110 [shape=record,label="{land.lhs.true.81.if.end.102.loopexit_crit_edge.exitStub}"];
	Node0x4d37160 [shape=record,label="{it_for.cond.64|{<s0>T|<s1>F}}"];
	Node0x4d37160:s0 -> Node0x4d371b0;
	Node0x4d37160:s1 -> Node0x4d37020;
	Node0x4d371b0 [shape=record,label="{it_for.body.68|{<s0>T|<s1>F}}"];
	Node0x4d371b0:s0 -> Node0x4d37340;
	Node0x4d371b0:s1 -> Node0x4d37200;
	Node0x4d37200 [shape=record,label="{it_lor.lhs.false.74|{<s0>T|<s1>F}}"];
	Node0x4d37200:s0 -> Node0x4d37250;
	Node0x4d37200:s1 -> Node0x4d37070;
	Node0x4d37250 [shape=record,label="{it_land.lhs.true.76|{<s0>T|<s1>F}}"];
	Node0x4d37250:s0 -> Node0x4d372a0;
	Node0x4d37250:s1 -> Node0x4d370c0;
	Node0x4d372a0 [shape=record,label="{it_land.lhs.true.81|{<s0>T|<s1>F}}"];
	Node0x4d372a0:s0 -> Node0x4d372f0;
	Node0x4d372a0:s1 -> Node0x4d37110;
	Node0x4d372f0 [shape=record,label="{pd_land.lhs.true.81.if.then.88_crit_edge}"];
	Node0x4d372f0 -> Node0x4d37390;
	Node0x4d37340 [shape=record,label="{pd_for.body.68.if.then.88_crit_edge}"];
	Node0x4d37340 -> Node0x4d37390;
	Node0x4d37390 [shape=record,label="{it_if.then.88}"];
	Node0x4d37390 -> Node0x4d373e0;
	Node0x4d373e0 [shape=record,label="{it_while.cond.91|{<s0>T|<s1>F}}"];
	Node0x4d373e0:s0 -> Node0x4d37480;
	Node0x4d373e0:s1 -> Node0x4d37430;
	Node0x4d37430 [shape=record,label="{it_for.inc.98}"];
	Node0x4d37430 -> Node0x4d37160;
	Node0x4d37480 [shape=record,label="{it_while.body.93}"];
	Node0x4d37480 -> Node0x4d373e0;
}
