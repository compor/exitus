digraph "CFG for 'Perl_mg_get_while.cond.outer' function" {
	label="CFG for 'Perl_mg_get_while.cond.outer' function";

	Node0x4bb5ba0 [shape=record,label="{newFuncRoot}"];
	Node0x4bb5ba0 -> Node0x4bb6420;
	Node0x4bb5bf0 [shape=record,label="{while.cond.while.end_crit_edge.exitStub}"];
	Node0x4bb5c40 [shape=record,label="{if.then.12.while.end_crit_edge.exitStub}"];
	Node0x4bb6420 [shape=record,label="{pd_while.cond.outer}"];
	Node0x4bb6420 -> Node0x4bb6470;
	Node0x4bb6470 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x4bb6470:s0 -> Node0x4bb64c0;
	Node0x4bb6470:s1 -> Node0x4bb5bf0;
	Node0x4bb64c0 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x4bb64c0:s0 -> Node0x4bb6560;
	Node0x4bb64c0:s1 -> Node0x4bb6510;
	Node0x4bb6510 [shape=record,label="{pd_while.body.if.end.26_crit_edge}"];
	Node0x4bb6510 -> Node0x4bb6740;
	Node0x4bb6560 [shape=record,label="{it_land.lhs.true.10|{<s0>T|<s1>F}}"];
	Node0x4bb6560:s0 -> Node0x4bb6600;
	Node0x4bb6560:s1 -> Node0x4bb65b0;
	Node0x4bb65b0 [shape=record,label="{pd_land.lhs.true.10.if.end.26_crit_edge}"];
	Node0x4bb65b0 -> Node0x4bb6740;
	Node0x4bb6600 [shape=record,label="{pd_if.then.12}"];
	Node0x4bb6600 -> Node0x655b8b0;
	Node0x655b8b0 [shape=record,label="{it_if.then.12.split|{<s0>T|<s1>F}}"];
	Node0x655b8b0:s0 -> Node0x4bb6650;
	Node0x655b8b0:s1 -> Node0x4bb5c40;
	Node0x4bb6650 [shape=record,label="{pd_if.end.19|{<s0>T|<s1>F}}"];
	Node0x4bb6650:s0 -> Node0x4bb66f0;
	Node0x4bb6650:s1 -> Node0x4bb66a0;
	Node0x4bb66a0 [shape=record,label="{pd_if.end.19.if.end.26_crit_edge}"];
	Node0x4bb66a0 -> Node0x4bb6740;
	Node0x4bb66f0 [shape=record,label="{pd_if.then.24}"];
	Node0x4bb66f0 -> Node0x4bb6740;
	Node0x4bb6740 [shape=record,label="{it_if.end.26|{<s0>T|<s1>F}}"];
	Node0x4bb6740:s0 -> Node0x4bb67e0;
	Node0x4bb6740:s1 -> Node0x4bb6790;
	Node0x4bb6790 [shape=record,label="{pd_if.end.26.if.end.32_crit_edge}"];
	Node0x4bb6790 -> Node0x4bb6830;
	Node0x4bb67e0 [shape=record,label="{it_if.then.28}"];
	Node0x4bb67e0 -> Node0x4bb6830;
	Node0x4bb6830 [shape=record,label="{it_if.end.32|{<s0>T|<s1>F}}"];
	Node0x4bb6830:s0 -> Node0x4bb68d0;
	Node0x4bb6830:s1 -> Node0x4bb6880;
	Node0x4bb6880 [shape=record,label="{it_land.lhs.true.34}"];
	Node0x4bb6880 -> Node0x4bb6420;
	Node0x4bb68d0 [shape=record,label="{pd_if.end.32.while.cond_crit_edge}"];
	Node0x4bb68d0 -> Node0x4bb6470;
}
