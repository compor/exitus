digraph "CFG for 'Perl_do_openn_for.cond' function" {
	label="CFG for 'Perl_do_openn_for.cond' function";

	Node0x4abd290 [shape=record,label="{newFuncRoot}"];
	Node0x4abd290 -> Node0x4abd330;
	Node0x4abd2e0 [shape=record,label="{while.cond.preheader.exitStub}"];
	Node0x4abd330 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x4abd330:s0 -> Node0x4abd600;
	Node0x4abd330:s1 -> Node0x4abd380;
	Node0x4abd380 [shape=record,label="{it_lor.lhs.false.189|{<s0>T|<s1>F}}"];
	Node0x4abd380:s0 -> Node0x4abd5b0;
	Node0x4abd380:s1 -> Node0x4abd3d0;
	Node0x4abd3d0 [shape=record,label="{it_lor.lhs.false.193|{<s0>T|<s1>F}}"];
	Node0x4abd3d0:s0 -> Node0x4abd560;
	Node0x4abd3d0:s1 -> Node0x4abd420;
	Node0x4abd420 [shape=record,label="{it_lor.lhs.false.197|{<s0>T|<s1>F}}"];
	Node0x4abd420:s0 -> Node0x4abd510;
	Node0x4abd420:s1 -> Node0x4abd470;
	Node0x4abd470 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0x4abd470:s0 -> Node0x4abd4c0;
	Node0x4abd470:s1 -> Node0x4abd2e0;
	Node0x4abd4c0 [shape=record,label="{pd_lor.rhs.for.inc_crit_edge}"];
	Node0x4abd4c0 -> Node0x4abd650;
	Node0x4abd510 [shape=record,label="{pd_lor.lhs.false.197.for.inc_crit_edge}"];
	Node0x4abd510 -> Node0x4abd650;
	Node0x4abd560 [shape=record,label="{pd_lor.lhs.false.193.for.inc_crit_edge}"];
	Node0x4abd560 -> Node0x4abd650;
	Node0x4abd5b0 [shape=record,label="{pd_lor.lhs.false.189.for.inc_crit_edge}"];
	Node0x4abd5b0 -> Node0x4abd650;
	Node0x4abd600 [shape=record,label="{pd_for.cond.for.inc_crit_edge}"];
	Node0x4abd600 -> Node0x4abd650;
	Node0x4abd650 [shape=record,label="{it_for.inc}"];
	Node0x4abd650 -> Node0x4abd330;
}
