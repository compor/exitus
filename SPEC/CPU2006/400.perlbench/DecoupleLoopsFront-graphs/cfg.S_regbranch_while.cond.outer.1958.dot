digraph "CFG for 'S_regbranch_while.cond.outer' function" {
	label="CFG for 'S_regbranch_while.cond.outer' function";

	Node0x51d7150 [shape=record,label="{newFuncRoot}"];
	Node0x51d7150 -> Node0x51d72e0;
	Node0x51d71a0 [shape=record,label="{while.cond.while.end_crit_edge.exitStub}"];
	Node0x51d71f0 [shape=record,label="{land.lhs.true.34.while.end_crit_edge.exitStub}"];
	Node0x51d7240 [shape=record,label="{land.rhs.while.end_crit_edge.exitStub}"];
	Node0x51d7290 [shape=record,label="{return.loopexit.exitStub}"];
	Node0x51d72e0 [shape=record,label="{pd_while.cond.outer}"];
	Node0x51d72e0 -> Node0x51d7330;
	Node0x51d7330 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x51d7330:s0 -> Node0x51d7380;
	Node0x51d7330:s1 -> Node0x51d71a0;
	Node0x51d7380 [shape=record,label="{it_land.lhs.true.34|{<s0>T|<s1>F}}"];
	Node0x51d7380:s0 -> Node0x51d73d0;
	Node0x51d7380:s1 -> Node0x51d71f0;
	Node0x51d73d0 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x51d73d0:s0 -> Node0x51d7420;
	Node0x51d73d0:s1 -> Node0x51d7240;
	Node0x51d7420 [shape=record,label="{pd_while.body}"];
	Node0x51d7420 -> Node0x6bb8340;
	Node0x6bb8340 [shape=record,label="{it_while.body.split|{<s0>T|<s1>F}}"];
	Node0x6bb8340:s0 -> Node0x51d75b0;
	Node0x6bb8340:s1 -> Node0x51d7470;
	Node0x51d7470 [shape=record,label="{pd_if.else.50|{<s0>T|<s1>F}}"];
	Node0x51d7470:s0 -> Node0x51d7510;
	Node0x51d7470:s1 -> Node0x51d74c0;
	Node0x51d74c0 [shape=record,label="{pd_if.else.62}"];
	Node0x51d74c0 -> Node0x51d7560;
	Node0x51d7510 [shape=record,label="{pd_if.then.59}"];
	Node0x51d7510 -> Node0x51d7560;
	Node0x51d7560 [shape=record,label="{pd_if.end.63}"];
	Node0x51d7560 -> Node0x51d72e0;
	Node0x51d75b0 [shape=record,label="{it_if.then.45|{<s0>T|<s1>F}}"];
	Node0x51d75b0:s0 -> Node0x51d7600;
	Node0x51d75b0:s1 -> Node0x51d7290;
	Node0x51d7600 [shape=record,label="{pd_if.then.45.while.cond_crit_edge}"];
	Node0x51d7600 -> Node0x51d7330;
}
