digraph "CFG for 'S_scan_pat_while.cond' function" {
	label="CFG for 'S_scan_pat_while.cond' function";

	Node0x57986b0 [shape=record,label="{newFuncRoot}"];
	Node0x57986b0 -> Node0x579d6d0;
	Node0x579d630 [shape=record,label="{while.cond.if.end.25.loopexit_crit_edge.exitStub}"];
	Node0x579d680 [shape=record,label="{land.rhs.if.end.25.loopexit_crit_edge.exitStub}"];
	Node0x579d6d0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x579d6d0:s0 -> Node0x579d720;
	Node0x579d6d0:s1 -> Node0x579d630;
	Node0x579d720 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x579d720:s0 -> Node0x579d770;
	Node0x579d720:s1 -> Node0x579d680;
	Node0x579d770 [shape=record,label="{pd_while.body}"];
	Node0x579d770 -> Node0x6de4f70;
	Node0x6de4f70 [shape=record,label="{it_while.body.split1}"];
	Node0x6de4f70 -> Node0x6c18a70;
	Node0x6c18a70 [shape=record,label="{pd_while.body.split}"];
	Node0x6c18a70 -> Node0x579d6d0;
}
