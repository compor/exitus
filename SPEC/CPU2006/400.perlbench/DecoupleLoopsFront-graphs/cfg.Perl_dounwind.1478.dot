digraph "CFG for 'Perl_dounwind' function" {
	label="CFG for 'Perl_dounwind' function";

	Node0x316f630 [shape=record,label="{entry}"];
	Node0x316f630 -> Node0x316f680;
	Node0x316f680 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x316f680:s0 -> Node0x316f6d0;
	Node0x316f680:s1 -> Node0x316ff90;
	Node0x316f6d0 [shape=record,label="{pd_while.body|{<s0>def|<s1>4|<s2>1|<s3>2|<s4>3|<s5>6}}"];
	Node0x316f6d0:s0 -> Node0x316f720;
	Node0x316f6d0:s1 -> Node0x316f770;
	Node0x316f6d0:s2 -> Node0x316f810;
	Node0x316f6d0:s3 -> Node0x316fb80;
	Node0x316f6d0:s4 -> Node0x316fc70;
	Node0x316f6d0:s5 -> Node0x316fef0;
	Node0x316f720 [shape=record,label="{pd_while.body.sw.epilog_crit_edge}"];
	Node0x316f720 -> Node0x316ff40;
	Node0x316f770 [shape=record,label="{pd_sw.bb}"];
	Node0x316f770 -> Node0x316f7c0;
	Node0x316f7c0 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x316f7c0 -> Node0x316f680;
	Node0x316f810 [shape=record,label="{pd_sw.bb.5|{<s0>T|<s1>F}}"];
	Node0x316f810:s0 -> Node0x316f8b0;
	Node0x316f810:s1 -> Node0x316f860;
	Node0x316f860 [shape=record,label="{pd_sw.bb.5.if.end.102_crit_edge}"];
	Node0x316f860 -> Node0x316f9a0;
	Node0x316f8b0 [shape=record,label="{pd_if.then|{<s0>T|<s1>F}}"];
	Node0x316f8b0:s0 -> Node0x316f900;
	Node0x316f8b0:s1 -> Node0x316f950;
	Node0x316f900 [shape=record,label="{pd_if.then.21}"];
	Node0x316f900 -> Node0x316f9a0;
	Node0x316f950 [shape=record,label="{pd_if.else}"];
	Node0x316f950 -> Node0x316f9a0;
	Node0x316f9a0 [shape=record,label="{pd_if.end.102|{<s0>T|<s1>F}}"];
	Node0x316f9a0:s0 -> Node0x316fa40;
	Node0x316f9a0:s1 -> Node0x316f9f0;
	Node0x316f9f0 [shape=record,label="{pd_if.end.102.if.end.115_crit_edge}"];
	Node0x316f9f0 -> Node0x316fa90;
	Node0x316fa40 [shape=record,label="{pd_land.lhs.true}"];
	Node0x316fa40 -> Node0x316fa90;
	Node0x316fa90 [shape=record,label="{pd_if.end.115|{<s0>T|<s1>F}}"];
	Node0x316fa90:s0 -> Node0x316fb30;
	Node0x316fa90:s1 -> Node0x316fae0;
	Node0x316fae0 [shape=record,label="{pd_if.end.115.sw.epilog_crit_edge}"];
	Node0x316fae0 -> Node0x316ff40;
	Node0x316fb30 [shape=record,label="{pd_if.then.117}"];
	Node0x316fb30 -> Node0x316ff40;
	Node0x316fb80 [shape=record,label="{pd_sw.bb.119|{<s0>T|<s1>F}}"];
	Node0x316fb80:s0 -> Node0x316fc20;
	Node0x316fb80:s1 -> Node0x316fbd0;
	Node0x316fbd0 [shape=record,label="{pd_sw.bb.119.sw.epilog_crit_edge}"];
	Node0x316fbd0 -> Node0x316ff40;
	Node0x316fc20 [shape=record,label="{pd_if.then.137}"];
	Node0x316fc20 -> Node0x316ff40;
	Node0x316fc70 [shape=record,label="{pd_sw.bb.145|{<s0>T|<s1>F}}"];
	Node0x316fc70:s0 -> Node0x316fd10;
	Node0x316fc70:s1 -> Node0x316fcc0;
	Node0x316fcc0 [shape=record,label="{pd_sw.bb.145.if.end.166_crit_edge}"];
	Node0x316fcc0 -> Node0x316fd60;
	Node0x316fd10 [shape=record,label="{pd_if.then.154}"];
	Node0x316fd10 -> Node0x316fd60;
	Node0x316fd60 [shape=record,label="{pd_if.end.166|{<s0>T|<s1>F}}"];
	Node0x316fd60:s0 -> Node0x316fe00;
	Node0x316fd60:s1 -> Node0x316fdb0;
	Node0x316fdb0 [shape=record,label="{pd_if.end.166.sw.epilog_crit_edge}"];
	Node0x316fdb0 -> Node0x316ff40;
	Node0x316fe00 [shape=record,label="{pd_land.lhs.true.172|{<s0>T|<s1>F}}"];
	Node0x316fe00:s0 -> Node0x316fea0;
	Node0x316fe00:s1 -> Node0x316fe50;
	Node0x316fe50 [shape=record,label="{pd_land.lhs.true.172.sw.epilog_crit_edge}"];
	Node0x316fe50 -> Node0x316ff40;
	Node0x316fea0 [shape=record,label="{pd_if.then.180}"];
	Node0x316fea0 -> Node0x316ff40;
	Node0x316fef0 [shape=record,label="{pd_sw.bb.188}"];
	Node0x316fef0 -> Node0x316ff40;
	Node0x316ff40 [shape=record,label="{pd_sw.epilog}"];
	Node0x316ff40 -> Node0x316f7c0;
	Node0x316ff90 [shape=record,label="{while.end}"];
}
