digraph "CFG for 'Perl_pp_hslice_while.cond' function" {
	label="CFG for 'Perl_pp_hslice_while.cond' function";

	Node0x4e575e0 [shape=record,label="{newFuncRoot}"];
	Node0x4e575e0 -> Node0x4e57720;
	Node0x4e57630 [shape=record,label="{if.end.133.loopexit.exitStub}"];
	Node0x4e57680 [shape=record,label="{if.then.87.if.then.92_crit_edge.exitStub}"];
	Node0x4e576d0 [shape=record,label="{lor.lhs.false.89.if.then.92_crit_edge.exitStub}"];
	Node0x4e57720 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x4e57720:s0 -> Node0x4e57770;
	Node0x4e57720:s1 -> Node0x4e57630;
	Node0x4e57770 [shape=record,label="{it_while.body}"];
	Node0x4e57770 -> Node0x66325c0;
	Node0x66325c0 [shape=record,label="{pd_while.body.split|{<s0>T|<s1>F}}"];
	Node0x66325c0:s0 -> Node0x4e57810;
	Node0x66325c0:s1 -> Node0x4e577c0;
	Node0x4e577c0 [shape=record,label="{pd_while.body.if.end.75_crit_edge}"];
	Node0x4e577c0 -> Node0x4e57a40;
	Node0x4e57810 [shape=record,label="{pd_if.then.55|{<s0>T|<s1>F}}"];
	Node0x4e57810:s0 -> Node0x4e578b0;
	Node0x4e57810:s1 -> Node0x4e57860;
	Node0x4e57860 [shape=record,label="{pd_if.then.55.cond.end.72_crit_edge}"];
	Node0x4e57860 -> Node0x4e579f0;
	Node0x4e578b0 [shape=record,label="{pd_cond.false.62|{<s0>T|<s1>F}}"];
	Node0x4e578b0:s0 -> Node0x4e57950;
	Node0x4e578b0:s1 -> Node0x4e57900;
	Node0x4e57900 [shape=record,label="{pd_cond.false.67}"];
	Node0x4e57900 -> Node0x4e579a0;
	Node0x4e57950 [shape=record,label="{pd_cond.true.64}"];
	Node0x4e57950 -> Node0x4e579a0;
	Node0x4e579a0 [shape=record,label="{pd_cond.end.70}"];
	Node0x4e579a0 -> Node0x4e579f0;
	Node0x4e579f0 [shape=record,label="{pd_cond.end.72}"];
	Node0x4e579f0 -> Node0x4e57a40;
	Node0x4e57a40 [shape=record,label="{it_if.end.75|{<s0>T|<s1>F}}"];
	Node0x4e57a40:s0 -> Node0x4e57ae0;
	Node0x4e57a40:s1 -> Node0x4e57a90;
	Node0x4e57a90 [shape=record,label="{it_if.else}"];
	Node0x4e57a90 -> Node0x4e57b30;
	Node0x4e57ae0 [shape=record,label="{it_if.then.77}"];
	Node0x4e57ae0 -> Node0x4e57b30;
	Node0x4e57b30 [shape=record,label="{it_if.end.85|{<s0>T|<s1>F}}"];
	Node0x4e57b30:s0 -> Node0x4e57bd0;
	Node0x4e57b30:s1 -> Node0x4e57b80;
	Node0x4e57b80 [shape=record,label="{pd_if.end.85.if.end.127_crit_edge}"];
	Node0x4e57b80 -> Node0x4e57ef0;
	Node0x4e57bd0 [shape=record,label="{it_if.then.87|{<s0>T|<s1>F}}"];
	Node0x4e57bd0:s0 -> Node0x4e57c20;
	Node0x4e57bd0:s1 -> Node0x4e57680;
	Node0x4e57c20 [shape=record,label="{it_lor.lhs.false.89|{<s0>T|<s1>F}}"];
	Node0x4e57c20:s0 -> Node0x4e576d0;
	Node0x4e57c20:s1 -> Node0x4e57c70;
	Node0x4e57c70 [shape=record,label="{pd_if.end.105|{<s0>T|<s1>F}}"];
	Node0x4e57c70:s0 -> Node0x4e57d10;
	Node0x4e57c70:s1 -> Node0x4e57cc0;
	Node0x4e57cc0 [shape=record,label="{pd_if.end.105.if.end.127_crit_edge}"];
	Node0x4e57cc0 -> Node0x4e57ef0;
	Node0x4e57d10 [shape=record,label="{pd_if.then.107|{<s0>T|<s1>F}}"];
	Node0x4e57d10:s0 -> Node0x4e57ea0;
	Node0x4e57d10:s1 -> Node0x4e57d60;
	Node0x4e57d60 [shape=record,label="{pd_if.else.110|{<s0>T|<s1>F}}"];
	Node0x4e57d60:s0 -> Node0x4e57e00;
	Node0x4e57d60:s1 -> Node0x4e57db0;
	Node0x4e57db0 [shape=record,label="{pd_cond.false.120}"];
	Node0x4e57db0 -> Node0x4e57e50;
	Node0x4e57e00 [shape=record,label="{pd_cond.true.115}"];
	Node0x4e57e00 -> Node0x4e57e50;
	Node0x4e57e50 [shape=record,label="{pd_cond.end.122}"];
	Node0x4e57e50 -> Node0x4e57ef0;
	Node0x4e57ea0 [shape=record,label="{pd_if.then.109}"];
	Node0x4e57ea0 -> Node0x4e57ef0;
	Node0x4e57ef0 [shape=record,label="{pd_if.end.127|{<s0>T|<s1>F}}"];
	Node0x4e57ef0:s0 -> Node0x4e57f90;
	Node0x4e57ef0:s1 -> Node0x4e57f40;
	Node0x4e57f40 [shape=record,label="{pd_if.end.127.cond.end.131_crit_edge}"];
	Node0x4e57f40 -> Node0x4e57fe0;
	Node0x4e57f90 [shape=record,label="{pd_cond.true.129}"];
	Node0x4e57f90 -> Node0x4e57fe0;
	Node0x4e57fe0 [shape=record,label="{pd_cond.end.131}"];
	Node0x4e57fe0 -> Node0x4e57720;
}
