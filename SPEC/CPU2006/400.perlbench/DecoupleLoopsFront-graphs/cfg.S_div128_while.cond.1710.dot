digraph "CFG for 'S_div128_while.cond' function" {
	label="CFG for 'S_div128_while.cond' function";

	Node0x509d800 [shape=record,label="{newFuncRoot}"];
	Node0x509d800 -> Node0x509d8a0;
	Node0x509d850 [shape=record,label="{while.end.exitStub}"];
	Node0x509d8a0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x509d8a0:s0 -> Node0x509d8f0;
	Node0x509d8a0:s1 -> Node0x509d850;
	Node0x509d8f0 [shape=record,label="{pd_while.body|{<s0>T|<s1>F}}"];
	Node0x509d8f0:s0 -> Node0x509d990;
	Node0x509d8f0:s1 -> Node0x509d940;
	Node0x509d940 [shape=record,label="{pd_while.body.if.end_crit_edge}"];
	Node0x509d940 -> Node0x509d9e0;
	Node0x509d990 [shape=record,label="{pd_if.then}"];
	Node0x509d990 -> Node0x509d9e0;
	Node0x509d9e0 [shape=record,label="{pd_if.end}"];
	Node0x509d9e0 -> Node0x6757af0;
	Node0x6757af0 [shape=record,label="{it_if.end.split1}"];
	Node0x6757af0 -> Node0x6828bc0;
	Node0x6828bc0 [shape=record,label="{pd_if.end.split}"];
	Node0x6828bc0 -> Node0x509d8a0;
}
