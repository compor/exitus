digraph "CFG for 'Perl_do_aexec5_while.cond' function" {
	label="CFG for 'Perl_do_aexec5_while.cond' function";

	Node0x4ad6570 [shape=record,label="{newFuncRoot}"];
	Node0x4ad6570 -> Node0x4adf5f0;
	Node0x4adf5a0 [shape=record,label="{while.end.exitStub}"];
	Node0x4adf5f0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x4adf5f0:s0 -> Node0x4adf640;
	Node0x4adf5f0:s1 -> Node0x4adf5a0;
	Node0x4adf640 [shape=record,label="{pd_while.body|{<s0>T|<s1>F}}"];
	Node0x4adf640:s0 -> Node0x4adf6e0;
	Node0x4adf640:s1 -> Node0x4adf690;
	Node0x4adf690 [shape=record,label="{pd_if.else}"];
	Node0x4adf690 -> Node0x4adf820;
	Node0x4adf6e0 [shape=record,label="{pd_if.then.2|{<s0>T|<s1>F}}"];
	Node0x4adf6e0:s0 -> Node0x4adf780;
	Node0x4adf6e0:s1 -> Node0x4adf730;
	Node0x4adf730 [shape=record,label="{pd_cond.false}"];
	Node0x4adf730 -> Node0x4adf7d0;
	Node0x4adf780 [shape=record,label="{pd_cond.true}"];
	Node0x4adf780 -> Node0x4adf7d0;
	Node0x4adf7d0 [shape=record,label="{pd_cond.end}"];
	Node0x4adf7d0 -> Node0x4adf820;
	Node0x4adf820 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x4adf820 -> Node0x4adf5f0;
}
