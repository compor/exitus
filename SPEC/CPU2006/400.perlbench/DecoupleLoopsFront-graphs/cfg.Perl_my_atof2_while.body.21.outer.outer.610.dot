digraph "CFG for 'Perl_my_atof2_while.body.21.outer.outer' function" {
	label="CFG for 'Perl_my_atof2_while.body.21.outer.outer' function";

	Node0x4be9340 [shape=record,label="{newFuncRoot}"];
	Node0x4be9340 -> Node0x4be9480;
	Node0x4be9390 [shape=record,label="{if.else.99.while.end.126.loopexit2_crit_edge.exitStub}"];
	Node0x4be93e0 [shape=record,label="{land.lhs.true.101.while.end.126.loopexit2_crit_edge.exitStub}"];
	Node0x4be9430 [shape=record,label="{if.then.108.exitStub}"];
	Node0x4be9480 [shape=record,label="{pd_while.body.21.outer.outer}"];
	Node0x4be9480 -> Node0x4be94d0;
	Node0x4be94d0 [shape=record,label="{pd_while.body.21.outer}"];
	Node0x4be94d0 -> Node0x4be9520;
	Node0x4be9520 [shape=record,label="{it_while.body.21|{<s0>T|<s1>F}}"];
	Node0x4be9520:s0 -> Node0x4be95c0;
	Node0x4be9520:s1 -> Node0x4be9570;
	Node0x4be9570 [shape=record,label="{pd_while.body.21.if.else.99_crit_edge}"];
	Node0x4be9570 -> Node0x4be9660;
	Node0x4be95c0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x4be95c0:s0 -> Node0x4be97a0;
	Node0x4be95c0:s1 -> Node0x4be9610;
	Node0x4be9610 [shape=record,label="{pd_land.lhs.true.if.else.99_crit_edge}"];
	Node0x4be9610 -> Node0x4be9660;
	Node0x4be9660 [shape=record,label="{it_if.else.99|{<s0>T|<s1>F}}"];
	Node0x4be9660:s0 -> Node0x4be9390;
	Node0x4be9660:s1 -> Node0x4be96b0;
	Node0x4be96b0 [shape=record,label="{it_land.lhs.true.101|{<s0>T|<s1>F}}"];
	Node0x4be96b0:s0 -> Node0x4be9700;
	Node0x4be96b0:s1 -> Node0x4be93e0;
	Node0x4be9700 [shape=record,label="{it_if.then.105|{<s0>T|<s1>F}}"];
	Node0x4be9700:s0 -> Node0x4be9430;
	Node0x4be9700:s1 -> Node0x4be9750;
	Node0x4be9750 [shape=record,label="{it_if.then.105.while.body.21_crit_edge}"];
	Node0x4be9750 -> Node0x4be9520;
	Node0x4be97a0 [shape=record,label="{it_if.then}"];
	Node0x4be97a0 -> Node0x659e700;
	Node0x659e700 [shape=record,label="{pd_if.then.split2}"];
	Node0x659e700 -> Node0x659ebe0;
	Node0x659ebe0 [shape=record,label="{it_if.then.split1}"];
	Node0x659ebe0 -> Node0x659f660;
	Node0x659f660 [shape=record,label="{pd_if.then.split|{<s0>T|<s1>F}}"];
	Node0x659f660:s0 -> Node0x4be9840;
	Node0x659f660:s1 -> Node0x4be97f0;
	Node0x4be97f0 [shape=record,label="{pd_if.then.if.end_crit_edge}"];
	Node0x4be97f0 -> Node0x4be9890;
	Node0x4be9840 [shape=record,label="{pd_if.then.31}"];
	Node0x4be9840 -> Node0x4be9890;
	Node0x4be9890 [shape=record,label="{it_if.end|{<s0>T|<s1>F}}"];
	Node0x4be9890:s0 -> Node0x4bea060;
	Node0x4be9890:s1 -> Node0x4be98e0;
	Node0x4be98e0 [shape=record,label="{it_if.end.37}"];
	Node0x4be98e0 -> Node0x659e530;
	Node0x659e530 [shape=record,label="{pd_if.end.37.split|{<s0>T|<s1>F}}"];
	Node0x659e530:s0 -> Node0x4be9a70;
	Node0x659e530:s1 -> Node0x4be9930;
	Node0x4be9930 [shape=record,label="{pd_if.else.79|{<s0>T|<s1>F}}"];
	Node0x4be9930:s0 -> Node0x4be99d0;
	Node0x4be9930:s1 -> Node0x4be9980;
	Node0x4be9980 [shape=record,label="{pd_if.else.79.if.end.92_crit_edge}"];
	Node0x4be9980 -> Node0x4be9a20;
	Node0x4be99d0 [shape=record,label="{pd_if.then.83}"];
	Node0x4be99d0 -> Node0x4be9a20;
	Node0x4be9a20 [shape=record,label="{pd_if.end.92}"];
	Node0x4be9a20 -> Node0x4be9ed0;
	Node0x4be9a70 [shape=record,label="{pd_if.then.41|{<s0>T|<s1>F}}"];
	Node0x4be9a70:s0 -> Node0x4be9bb0;
	Node0x4be9a70:s1 -> Node0x4be9ac0;
	Node0x4be9ac0 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x4be9ac0:s0 -> Node0x4be9b60;
	Node0x4be9ac0:s1 -> Node0x4be9b10;
	Node0x4be9b10 [shape=record,label="{pd_if.else.if.end.56_crit_edge}"];
	Node0x4be9b10 -> Node0x4be9c00;
	Node0x4be9b60 [shape=record,label="{pd_if.then.51}"];
	Node0x4be9b60 -> Node0x4be9c00;
	Node0x4be9bb0 [shape=record,label="{pd_if.then.44}"];
	Node0x4be9bb0 -> Node0x4be9c00;
	Node0x4be9c00 [shape=record,label="{pd_if.end.56|{<s0>T|<s1>F}}"];
	Node0x4be9c00:s0 -> Node0x4be9ca0;
	Node0x4be9c00:s1 -> Node0x4be9c50;
	Node0x4be9c50 [shape=record,label="{pd_if.else.60}"];
	Node0x4be9c50 -> Node0x4be9cf0;
	Node0x4be9ca0 [shape=record,label="{pd_if.then.58}"];
	Node0x4be9ca0 -> Node0x4be9cf0;
	Node0x4be9cf0 [shape=record,label="{pd_while.cond.64.preheader}"];
	Node0x4be9cf0 -> Node0x4be9d40;
	Node0x4be9d40 [shape=record,label="{pd_while.cond.64|{<s0>T|<s1>F}}"];
	Node0x4be9d40:s0 -> Node0x4be9de0;
	Node0x4be9d40:s1 -> Node0x4be9d90;
	Node0x4be9d90 [shape=record,label="{pd_while.cond.64.while.body.21.loopexit_crit_edge}"];
	Node0x4be9d90 -> Node0x4be9e80;
	Node0x4be9de0 [shape=record,label="{pd_land.rhs|{<s0>T|<s1>F}}"];
	Node0x4be9de0:s0 -> Node0x4be9f20;
	Node0x4be9de0:s1 -> Node0x4be9e30;
	Node0x4be9e30 [shape=record,label="{pd_land.rhs.while.body.21.loopexit_crit_edge}"];
	Node0x4be9e30 -> Node0x4be9e80;
	Node0x4be9e80 [shape=record,label="{pd_while.body.21.loopexit}"];
	Node0x4be9e80 -> Node0x4be9ed0;
	Node0x4be9ed0 [shape=record,label="{pd_while.body.21.outer.outer.backedge}"];
	Node0x4be9ed0 -> Node0x4be9480;
	Node0x4be9f20 [shape=record,label="{pd_while.body.71|{<s0>T|<s1>F}}"];
	Node0x4be9f20:s0 -> Node0x4be9fc0;
	Node0x4be9f20:s1 -> Node0x4be9f70;
	Node0x4be9f70 [shape=record,label="{pd_if.then.74}"];
	Node0x4be9f70 -> Node0x4bea010;
	Node0x4be9fc0 [shape=record,label="{pd_while.body.71.while.cond.64.backedge_crit_edge}"];
	Node0x4be9fc0 -> Node0x4bea010;
	Node0x4bea010 [shape=record,label="{pd_while.cond.64.backedge}"];
	Node0x4bea010 -> Node0x4be9d40;
	Node0x4bea060 [shape=record,label="{pd_if.end.while.body.21.outer_crit_edge}"];
	Node0x4bea060 -> Node0x4be94d0;
}
