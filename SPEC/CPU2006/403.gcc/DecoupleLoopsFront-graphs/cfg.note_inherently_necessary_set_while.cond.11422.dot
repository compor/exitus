digraph "CFG for 'note_inherently_necessary_set_while.cond' function" {
	label="CFG for 'note_inherently_necessary_set_while.cond' function";

	Node0xc363230 [shape=record,label="{newFuncRoot}"];
	Node0xc363230 -> Node0xc3632d0;
	Node0xc363280 [shape=record,label="{while.end.exitStub}"];
	Node0xc3632d0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xc3632d0:s0 -> Node0xc363500;
	Node0xc3632d0:s1 -> Node0xc363320;
	Node0xc363320 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0xc363320:s0 -> Node0xc3634b0;
	Node0xc363320:s1 -> Node0xc363370;
	Node0xc363370 [shape=record,label="{it_lor.lhs.false.4|{<s0>T|<s1>F}}"];
	Node0xc363370:s0 -> Node0xc363460;
	Node0xc363370:s1 -> Node0xc3633c0;
	Node0xc3633c0 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0xc3633c0:s0 -> Node0xc363410;
	Node0xc3633c0:s1 -> Node0xc363280;
	Node0xc363410 [shape=record,label="{pd_lor.rhs.while.body_crit_edge}"];
	Node0xc363410 -> Node0xc363550;
	Node0xc363460 [shape=record,label="{pd_lor.lhs.false.4.while.body_crit_edge}"];
	Node0xc363460 -> Node0xc363550;
	Node0xc3634b0 [shape=record,label="{pd_lor.lhs.false.while.body_crit_edge}"];
	Node0xc3634b0 -> Node0xc363550;
	Node0xc363500 [shape=record,label="{pd_while.cond.while.body_crit_edge}"];
	Node0xc363500 -> Node0xc363550;
	Node0xc363550 [shape=record,label="{it_while.body}"];
	Node0xc363550 -> Node0xc3632d0;
}
