digraph "CFG for 'conflict_graph_merge_regs_while.cond' function" {
	label="CFG for 'conflict_graph_merge_regs_while.cond' function";

	Node0xa708b50 [shape=record,label="{newFuncRoot}"];
	Node0xa708b50 -> Node0xa7c6610;
	Node0xa7c65c0 [shape=record,label="{while.end.loopexit.exitStub}"];
	Node0xa7c6610 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xa7c6610:s0 -> Node0xa7c6660;
	Node0xa7c6610:s1 -> Node0xa7c65c0;
	Node0xa7c6660 [shape=record,label="{pd_while.body|{<s0>T|<s1>F}}"];
	Node0xa7c6660:s0 -> Node0xa7c6700;
	Node0xa7c6660:s1 -> Node0xa7c66b0;
	Node0xa7c66b0 [shape=record,label="{pd_while.body.if.end.4_crit_edge}"];
	Node0xa7c66b0 -> Node0xa7c6750;
	Node0xa7c6700 [shape=record,label="{pd_if.then.3}"];
	Node0xa7c6700 -> Node0xa7c6750;
	Node0xa7c6750 [shape=record,label="{pd_if.end.4}"];
	Node0xa7c6750 -> Node0xf0ab620;
	Node0xf0ab620 [shape=record,label="{it_if.end.4.split|{<s0>T|<s1>F}}"];
	Node0xf0ab620:s0 -> Node0xa7c67f0;
	Node0xf0ab620:s1 -> Node0xa7c67a0;
	Node0xa7c67a0 [shape=record,label="{it_if.else}"];
	Node0xa7c67a0 -> Node0xa7c6840;
	Node0xa7c67f0 [shape=record,label="{it_if.then.7}"];
	Node0xa7c67f0 -> Node0xa7c6840;
	Node0xa7c6840 [shape=record,label="{pd_while.cond.backedge}"];
	Node0xa7c6840 -> Node0xa7c6610;
}
