digraph "CFG for 'find_reg_note_for.cond' function" {
	label="CFG for 'find_reg_note_for.cond' function";

	Node0xc0cd370 [shape=record,label="{newFuncRoot}"];
	Node0xc0cd370 -> Node0xc0cd4b0;
	Node0xc0cd3c0 [shape=record,label="{for.cond.return.loopexit_crit_edge.exitStub}"];
	Node0xc0cd410 [shape=record,label="{land.lhs.true.return.loopexit_crit_edge.exitStub}"];
	Node0xc0cd460 [shape=record,label="{lor.lhs.false.return.loopexit_crit_edge.exitStub}"];
	Node0xc0cd4b0 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0xc0cd4b0:s0 -> Node0xc0cd500;
	Node0xc0cd4b0:s1 -> Node0xc0cd3c0;
	Node0xc0cd500 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0xc0cd500:s0 -> Node0xc0cd5a0;
	Node0xc0cd500:s1 -> Node0xc0cd550;
	Node0xc0cd550 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0xc0cd550 -> Node0xc0cd690;
	Node0xc0cd5a0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0xc0cd5a0:s0 -> Node0xc0cd410;
	Node0xc0cd5a0:s1 -> Node0xc0cd5f0;
	Node0xc0cd5f0 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0xc0cd5f0:s0 -> Node0xc0cd460;
	Node0xc0cd5f0:s1 -> Node0xc0cd640;
	Node0xc0cd640 [shape=record,label="{pd_lor.lhs.false.for.inc_crit_edge}"];
	Node0xc0cd640 -> Node0xc0cd690;
	Node0xc0cd690 [shape=record,label="{it_for.inc}"];
	Node0xc0cd690 -> Node0xc0cd4b0;
}
