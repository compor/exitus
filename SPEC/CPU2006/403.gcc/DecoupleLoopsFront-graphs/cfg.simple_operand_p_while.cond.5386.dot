digraph "CFG for 'simple_operand_p_while.cond' function" {
	label="CFG for 'simple_operand_p_while.cond' function";

	Node0xaf9cf00 [shape=record,label="{newFuncRoot}"];
	Node0xaf9cf00 -> Node0xaf9d860;
	Node0xaf9cf50 [shape=record,label="{lor.lhs.false.while.end_crit_edge.exitStub}"];
	Node0xaf9cfa0 [shape=record,label="{land.rhs.while.end_crit_edge.exitStub}"];
	Node0xaf9d860 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xaf9d860:s0 -> Node0xaf9d950;
	Node0xaf9d860:s1 -> Node0xaf9d8b0;
	Node0xaf9d8b0 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0xaf9d8b0:s0 -> Node0xaf9d900;
	Node0xaf9d8b0:s1 -> Node0xaf9cf50;
	Node0xaf9d900 [shape=record,label="{pd_lor.lhs.false.land.rhs_crit_edge}"];
	Node0xaf9d900 -> Node0xaf9d9a0;
	Node0xaf9d950 [shape=record,label="{pd_while.cond.land.rhs_crit_edge}"];
	Node0xaf9d950 -> Node0xaf9d9a0;
	Node0xaf9d9a0 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0xaf9d9a0:s0 -> Node0xaf9d9f0;
	Node0xaf9d9a0:s1 -> Node0xaf9cfa0;
	Node0xaf9d9f0 [shape=record,label="{it_while.body}"];
	Node0xaf9d9f0 -> Node0xaf9d860;
}
