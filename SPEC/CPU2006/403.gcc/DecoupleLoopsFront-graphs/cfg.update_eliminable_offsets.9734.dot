digraph "CFG for 'update_eliminable_offsets' function" {
	label="CFG for 'update_eliminable_offsets' function";

	Node0x8bff3d0 [shape=record,label="{entry}"];
	Node0x8bff3d0 -> Node0x8bff420;
	Node0x8bff420 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x8bff420:s0 -> Node0x8bff470;
	Node0x8bff420:s1 -> Node0x8bff650;
	Node0x8bff470 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x8bff470:s0 -> Node0x8bff510;
	Node0x8bff470:s1 -> Node0x8bff4c0;
	Node0x8bff4c0 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x8bff4c0 -> Node0x8bff600;
	Node0x8bff510 [shape=record,label="{pd_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x8bff510:s0 -> Node0x8bff5b0;
	Node0x8bff510:s1 -> Node0x8bff560;
	Node0x8bff560 [shape=record,label="{pd_land.lhs.true.for.inc_crit_edge}"];
	Node0x8bff560 -> Node0x8bff600;
	Node0x8bff5b0 [shape=record,label="{pd_if.then}"];
	Node0x8bff5b0 -> Node0x8bff600;
	Node0x8bff600 [shape=record,label="{it_for.inc}"];
	Node0x8bff600 -> Node0x8bff420;
	Node0x8bff650 [shape=record,label="{for.end}"];
}
