digraph "CFG for 'find_replacement_for.cond' function" {
	label="CFG for 'find_replacement_for.cond' function";

	Node0xbcd57c0 [shape=record,label="{newFuncRoot}"];
	Node0xbcd57c0 -> Node0xbcde830;
	Node0xbcde740 [shape=record,label="{for.end.exitStub}"];
	Node0xbcde790 [shape=record,label="{if.then.exitStub}"];
	Node0xbcde7e0 [shape=record,label="{if.then.14.exitStub}"];
	Node0xbcde830 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0xbcde830:s0 -> Node0xbcde880;
	Node0xbcde830:s1 -> Node0xbcde740;
	Node0xbcde880 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0xbcde880:s0 -> Node0xbcdea60;
	Node0xbcde880:s1 -> Node0xbcde8d0;
	Node0xbcde8d0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0xbcde8d0:s0 -> Node0xbcde790;
	Node0xbcde8d0:s1 -> Node0xbcde920;
	Node0xbcde920 [shape=record,label="{it_if.else|{<s0>T|<s1>F}}"];
	Node0xbcde920:s0 -> Node0xbcde9c0;
	Node0xbcde920:s1 -> Node0xbcde970;
	Node0xbcde970 [shape=record,label="{pd_if.else.for.inc_crit_edge}"];
	Node0xbcde970 -> Node0xbcdeab0;
	Node0xbcde9c0 [shape=record,label="{it_land.lhs.true.12|{<s0>T|<s1>F}}"];
	Node0xbcde9c0:s0 -> Node0xbcde7e0;
	Node0xbcde9c0:s1 -> Node0xbcdea10;
	Node0xbcdea10 [shape=record,label="{pd_land.lhs.true.12.for.inc_crit_edge}"];
	Node0xbcdea10 -> Node0xbcdeab0;
	Node0xbcdea60 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0xbcdea60 -> Node0xbcdeab0;
	Node0xbcdeab0 [shape=record,label="{it_for.inc}"];
	Node0xbcdeab0 -> Node0xbcde830;
}
