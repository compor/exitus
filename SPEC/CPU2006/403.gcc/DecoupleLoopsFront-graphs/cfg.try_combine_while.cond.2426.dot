digraph "CFG for 'try_combine_while.cond' function" {
	label="CFG for 'try_combine_while.cond' function";

	Node0xa5faea0 [shape=record,label="{newFuncRoot}"];
	Node0xa5faea0 -> Node0xa5faf40;
	Node0xa5faef0 [shape=record,label="{while.cond.1800.preheader.exitStub}"];
	Node0xa5faf40 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xa5faf40:s0 -> Node0xa5fb0d0;
	Node0xa5faf40:s1 -> Node0xa5faf90;
	Node0xa5faf90 [shape=record,label="{it_lor.lhs.false.1785|{<s0>T|<s1>F}}"];
	Node0xa5faf90:s0 -> Node0xa5fb080;
	Node0xa5faf90:s1 -> Node0xa5fafe0;
	Node0xa5fafe0 [shape=record,label="{it_lor.rhs.1790|{<s0>T|<s1>F}}"];
	Node0xa5fafe0:s0 -> Node0xa5fb030;
	Node0xa5fafe0:s1 -> Node0xa5faef0;
	Node0xa5fb030 [shape=record,label="{pd_lor.rhs.1790.while.body_crit_edge}"];
	Node0xa5fb030 -> Node0xa5fb120;
	Node0xa5fb080 [shape=record,label="{pd_lor.lhs.false.1785.while.body_crit_edge}"];
	Node0xa5fb080 -> Node0xa5fb120;
	Node0xa5fb0d0 [shape=record,label="{pd_while.cond.while.body_crit_edge}"];
	Node0xa5fb0d0 -> Node0xa5fb120;
	Node0xa5fb120 [shape=record,label="{it_while.body}"];
	Node0xa5fb120 -> Node0xa5faf40;
}
