digraph "CFG for 'get_memory_rtx_while.cond' function" {
	label="CFG for 'get_memory_rtx_while.cond' function";

	Node0x79ef200 [shape=record,label="{newFuncRoot}"];
	Node0x79ef200 -> Node0x79ef2f0;
	Node0x79ef250 [shape=record,label="{lor.lhs.false.8.while.end_crit_edge.exitStub}"];
	Node0x79ef2a0 [shape=record,label="{lor.rhs.while.end_crit_edge.exitStub}"];
	Node0x79ef2f0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x79ef2f0:s0 -> Node0x79ef480;
	Node0x79ef2f0:s1 -> Node0x79ef340;
	Node0x79ef340 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0x79ef340:s0 -> Node0x79ef430;
	Node0x79ef340:s1 -> Node0x79ef390;
	Node0x79ef390 [shape=record,label="{it_lor.lhs.false.8|{<s0>T|<s1>F}}"];
	Node0x79ef390:s0 -> Node0x79ef3e0;
	Node0x79ef390:s1 -> Node0x79ef250;
	Node0x79ef3e0 [shape=record,label="{pd_lor.lhs.false.8.land.rhs_crit_edge}"];
	Node0x79ef3e0 -> Node0x79ef4d0;
	Node0x79ef430 [shape=record,label="{pd_lor.lhs.false.land.rhs_crit_edge}"];
	Node0x79ef430 -> Node0x79ef4d0;
	Node0x79ef480 [shape=record,label="{pd_while.cond.land.rhs_crit_edge}"];
	Node0x79ef480 -> Node0x79ef4d0;
	Node0x79ef4d0 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x79ef4d0:s0 -> Node0x79ef5c0;
	Node0x79ef4d0:s1 -> Node0x79ef520;
	Node0x79ef520 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0x79ef520:s0 -> Node0x79ef570;
	Node0x79ef520:s1 -> Node0x79ef2a0;
	Node0x79ef570 [shape=record,label="{pd_lor.rhs.while.body_crit_edge}"];
	Node0x79ef570 -> Node0x79ef610;
	Node0x79ef5c0 [shape=record,label="{pd_land.rhs.while.body_crit_edge}"];
	Node0x79ef5c0 -> Node0x79ef610;
	Node0x79ef610 [shape=record,label="{it_while.body}"];
	Node0x79ef610 -> Node0x79ef2f0;
}
