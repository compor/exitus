digraph "CFG for 'compute_farthest' function" {
	label="CFG for 'compute_farthest' function";

	Node0x7f0dae0 [shape=record,label="{entry}"];
	Node0x7f0dae0 -> Node0x7f0db30;
	Node0x7f0db30 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x7f0db30:s0 -> Node0x7f0db80;
	Node0x7f0db30:s1 -> Node0x7f0dd60;
	Node0x7f0db80 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x7f0db80:s0 -> Node0x7f0dbd0;
	Node0x7f0db80:s1 -> Node0x7f0dc20;
	Node0x7f0dbd0 [shape=record,label="{pd_if.then}"];
	Node0x7f0dbd0 -> Node0x7f0dd10;
	Node0x7f0dc20 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x7f0dc20:s0 -> Node0x7f0dc70;
	Node0x7f0dc20:s1 -> Node0x7f0dcc0;
	Node0x7f0dc70 [shape=record,label="{pd_if.then.12}"];
	Node0x7f0dc70 -> Node0x7f0dd10;
	Node0x7f0dcc0 [shape=record,label="{pd_if.else.15}"];
	Node0x7f0dcc0 -> Node0x7f0dd10;
	Node0x7f0dd10 [shape=record,label="{it_for.inc}"];
	Node0x7f0dd10 -> Node0x7f0db30;
	Node0x7f0dd60 [shape=record,label="{for.end}"];
}
