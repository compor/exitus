digraph "CFG for 'is_aligning_offset_while.cond' function" {
	label="CFG for 'is_aligning_offset_while.cond' function";

	Node0xade7e30 [shape=record,label="{newFuncRoot}"];
	Node0xade7e30 -> Node0xadebb30;
	Node0xadebae0 [shape=record,label="{while.end.exitStub}"];
	Node0xadebb30 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xadebb30:s0 -> Node0xadebd60;
	Node0xadebb30:s1 -> Node0xadebb80;
	Node0xadebb80 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0xadebb80:s0 -> Node0xadebd10;
	Node0xadebb80:s1 -> Node0xadebbd0;
	Node0xadebbd0 [shape=record,label="{it_lor.lhs.false.6|{<s0>T|<s1>F}}"];
	Node0xadebbd0:s0 -> Node0xadebcc0;
	Node0xadebbd0:s1 -> Node0xadebc20;
	Node0xadebc20 [shape=record,label="{it_lor.rhs|{<s0>T|<s1>F}}"];
	Node0xadebc20:s0 -> Node0xadebc70;
	Node0xadebc20:s1 -> Node0xadebae0;
	Node0xadebc70 [shape=record,label="{pd_lor.rhs.while.body_crit_edge}"];
	Node0xadebc70 -> Node0xadebdb0;
	Node0xadebcc0 [shape=record,label="{pd_lor.lhs.false.6.while.body_crit_edge}"];
	Node0xadebcc0 -> Node0xadebdb0;
	Node0xadebd10 [shape=record,label="{pd_lor.lhs.false.while.body_crit_edge}"];
	Node0xadebd10 -> Node0xadebdb0;
	Node0xadebd60 [shape=record,label="{pd_while.cond.while.body_crit_edge}"];
	Node0xadebd60 -> Node0xadebdb0;
	Node0xadebdb0 [shape=record,label="{it_while.body}"];
	Node0xadebdb0 -> Node0xadebb30;
}
