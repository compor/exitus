digraph "CFG for 'initialize_for_inline' function" {
	label="CFG for 'initialize_for_inline' function";

	Node0x7dfa430 [shape=record,label="{entry}"];
	Node0x7dfa430 -> Node0x7dfa480;
	Node0x7dfa480 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x7dfa480:s0 -> Node0x7dfa4d0;
	Node0x7dfa480:s1 -> Node0x7dfab60;
	Node0x7dfa4d0 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x7dfa4d0:s0 -> Node0x7dfa520;
	Node0x7dfa4d0:s1 -> Node0x7dfa570;
	Node0x7dfa520 [shape=record,label="{pd_cond.true}"];
	Node0x7dfa520 -> Node0x7dfa5c0;
	Node0x7dfa570 [shape=record,label="{pd_cond.false}"];
	Node0x7dfa570 -> Node0x7dfa5c0;
	Node0x7dfa5c0 [shape=record,label="{pd_cond.end|{<s0>T|<s1>F}}"];
	Node0x7dfa5c0:s0 -> Node0x7dfa660;
	Node0x7dfa5c0:s1 -> Node0x7dfa610;
	Node0x7dfa610 [shape=record,label="{pd_cond.end.if.end_crit_edge}"];
	Node0x7dfa610 -> Node0x7dfa7f0;
	Node0x7dfa660 [shape=record,label="{pd_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x7dfa660:s0 -> Node0x7dfa700;
	Node0x7dfa660:s1 -> Node0x7dfa6b0;
	Node0x7dfa6b0 [shape=record,label="{pd_land.lhs.true.if.end_crit_edge}"];
	Node0x7dfa6b0 -> Node0x7dfa7f0;
	Node0x7dfa700 [shape=record,label="{pd_land.lhs.true.15|{<s0>T|<s1>F}}"];
	Node0x7dfa700:s0 -> Node0x7dfa7a0;
	Node0x7dfa700:s1 -> Node0x7dfa750;
	Node0x7dfa750 [shape=record,label="{pd_land.lhs.true.15.if.end_crit_edge}"];
	Node0x7dfa750 -> Node0x7dfa7f0;
	Node0x7dfa7a0 [shape=record,label="{pd_if.then}"];
	Node0x7dfa7a0 -> Node0x7dfa7f0;
	Node0x7dfa7f0 [shape=record,label="{pd_if.end|{<s0>T|<s1>F}}"];
	Node0x7dfa7f0:s0 -> Node0x7dfa840;
	Node0x7dfa7f0:s1 -> Node0x7dfa890;
	Node0x7dfa840 [shape=record,label="{pd_if.then.37}"];
	Node0x7dfa840 -> Node0x7dfab10;
	Node0x7dfa890 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x7dfa890:s0 -> Node0x7dfa930;
	Node0x7dfa890:s1 -> Node0x7dfa8e0;
	Node0x7dfa8e0 [shape=record,label="{pd_if.else.if.end.80_crit_edge}"];
	Node0x7dfa8e0 -> Node0x7dfab10;
	Node0x7dfa930 [shape=record,label="{pd_if.then.46|{<s0>T|<s1>F}}"];
	Node0x7dfa930:s0 -> Node0x7dfa9d0;
	Node0x7dfa930:s1 -> Node0x7dfa980;
	Node0x7dfa980 [shape=record,label="{pd_if.then.46.if.end.67_crit_edge}"];
	Node0x7dfa980 -> Node0x7dfaa20;
	Node0x7dfa9d0 [shape=record,label="{pd_if.then.61}"];
	Node0x7dfa9d0 -> Node0x7dfaa20;
	Node0x7dfaa20 [shape=record,label="{pd_if.end.67|{<s0>T|<s1>F}}"];
	Node0x7dfaa20:s0 -> Node0x7dfaac0;
	Node0x7dfaa20:s1 -> Node0x7dfaa70;
	Node0x7dfaa70 [shape=record,label="{pd_if.end.67.if.end.80_crit_edge}"];
	Node0x7dfaa70 -> Node0x7dfab10;
	Node0x7dfaac0 [shape=record,label="{pd_if.then.72}"];
	Node0x7dfaac0 -> Node0x7dfab10;
	Node0x7dfab10 [shape=record,label="{pd_if.end.80}"];
	Node0x7dfab10 -> Node0xe81d2f0;
	Node0xe81d2f0 [shape=record,label="{it_if.end.80.split1}"];
	Node0xe81d2f0 -> Node0xe852be0;
	Node0xe852be0 [shape=record,label="{pd_if.end.80.split}"];
	Node0xe852be0 -> Node0x7dfa480;
	Node0x7dfab60 [shape=record,label="{for.end}"];
}
