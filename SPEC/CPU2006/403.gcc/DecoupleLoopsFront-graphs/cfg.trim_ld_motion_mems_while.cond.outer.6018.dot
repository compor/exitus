digraph "CFG for 'trim_ld_motion_mems_while.cond.outer' function" {
	label="CFG for 'trim_ld_motion_mems_while.cond.outer' function";

	Node0xb18b920 [shape=record,label="{newFuncRoot}"];
	Node0xb18b920 -> Node0xb18bf10;
	Node0xb18b970 [shape=record,label="{while.end.exitStub}"];
	Node0xb18bf10 [shape=record,label="{pd_while.cond.outer}"];
	Node0xb18bf10 -> Node0xb18bf60;
	Node0xb18bf60 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0xb18bf60:s0 -> Node0xb18bfb0;
	Node0xb18bf60:s1 -> Node0xb18b970;
	Node0xb18bfb0 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0xb18bfb0:s0 -> Node0xb18c320;
	Node0xb18bfb0:s1 -> Node0xb18c000;
	Node0xb18c000 [shape=record,label="{it_for.cond.preheader}"];
	Node0xb18c000 -> Node0xb18c050;
	Node0xb18c050 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0xb18c050:s0 -> Node0xb18c0f0;
	Node0xb18c050:s1 -> Node0xb18c0a0;
	Node0xb18c0a0 [shape=record,label="{pd_if.end.12.loopexit}"];
	Node0xb18c0a0 -> Node0xb18c370;
	Node0xb18c0f0 [shape=record,label="{it_for.body}"];
	Node0xb18c0f0 -> Node0xb18c140;
	Node0xb18c140 [shape=record,label="{it_for.cond.3|{<s0>T|<s1>F}}"];
	Node0xb18c140:s0 -> Node0xb18c1e0;
	Node0xb18c140:s1 -> Node0xb18c190;
	Node0xb18c190 [shape=record,label="{pd_for.cond.3.for.inc.10_crit_edge}"];
	Node0xb18c190 -> Node0xb18c2d0;
	Node0xb18c1e0 [shape=record,label="{it_for.body.5|{<s0>T|<s1>F}}"];
	Node0xb18c1e0:s0 -> Node0xb18c280;
	Node0xb18c1e0:s1 -> Node0xb18c230;
	Node0xb18c230 [shape=record,label="{it_for.inc}"];
	Node0xb18c230 -> Node0xb18c140;
	Node0xb18c280 [shape=record,label="{it_for.body.5.for.inc.10_crit_edge}"];
	Node0xb18c280 -> Node0xb18c2d0;
	Node0xb18c2d0 [shape=record,label="{it_for.inc.10}"];
	Node0xb18c2d0 -> Node0xb18c050;
	Node0xb18c320 [shape=record,label="{pd_while.body.if.end.12_crit_edge}"];
	Node0xb18c320 -> Node0xb18c370;
	Node0xb18c370 [shape=record,label="{it_if.end.12|{<s0>T|<s1>F}}"];
	Node0xb18c370:s0 -> Node0xb18c410;
	Node0xb18c370:s1 -> Node0xb18c3c0;
	Node0xb18c3c0 [shape=record,label="{pd_if.else.21}"];
	Node0xb18c3c0 -> Node0xf7c5440;
	Node0xf7c5440 [shape=record,label="{it_if.else.21.split}"];
	Node0xf7c5440 -> Node0xb18bf10;
	Node0xb18c410 [shape=record,label="{it_if.then.14|{<s0>T|<s1>F}}"];
	Node0xb18c410:s0 -> Node0xb18c4b0;
	Node0xb18c410:s1 -> Node0xb18c460;
	Node0xb18c460 [shape=record,label="{pd_if.else}"];
	Node0xb18c460 -> Node0xf7c53c0;
	Node0xf7c53c0 [shape=record,label="{it_if.else.split}"];
	Node0xf7c53c0 -> Node0xb18c500;
	Node0xb18c4b0 [shape=record,label="{pd_if.then.16}"];
	Node0xb18c4b0 -> Node0xf7c5060;
	Node0xf7c5060 [shape=record,label="{it_if.then.16.split}"];
	Node0xf7c5060 -> Node0xb18c500;
	Node0xb18c500 [shape=record,label="{pd_while.cond.backedge}"];
	Node0xb18c500 -> Node0xb18bf60;
}
