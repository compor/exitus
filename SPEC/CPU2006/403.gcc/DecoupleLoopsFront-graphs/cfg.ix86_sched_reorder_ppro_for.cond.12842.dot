digraph "CFG for 'ix86_sched_reorder_ppro_for.cond' function" {
	label="CFG for 'ix86_sched_reorder_ppro_for.cond' function";

	Node0xc6f51d0 [shape=record,label="{newFuncRoot}"];
	Node0xc6f51d0 -> Node0xc6f52c0;
	Node0xc6f5220 [shape=record,label="{for.cond.ppro_done.loopexit_crit_edge.exitStub}"];
	Node0xc6f5270 [shape=record,label="{if.then.18.ppro_done.loopexit_crit_edge.exitStub}"];
	Node0xc6f52c0 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0xc6f52c0:s0 -> Node0xc6f5310;
	Node0xc6f52c0:s1 -> Node0xc6f5220;
	Node0xc6f5310 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0xc6f5310:s0 -> Node0xc6f53b0;
	Node0xc6f5310:s1 -> Node0xc6f5360;
	Node0xc6f5360 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0xc6f5360 -> Node0xc6f56d0;
	Node0xc6f53b0 [shape=record,label="{it_if.then.18|{<s0>T|<s1>F}}"];
	Node0xc6f53b0:s0 -> Node0xc6f5270;
	Node0xc6f53b0:s1 -> Node0xc6f5400;
	Node0xc6f5400 [shape=record,label="{it_if.end.21}"];
	Node0xc6f5400 -> Node0xc6f5450;
	Node0xc6f5450 [shape=record,label="{it_while.cond.23|{<s0>T|<s1>F}}"];
	Node0xc6f5450:s0 -> Node0xc6f5630;
	Node0xc6f5450:s1 -> Node0xc6f54a0;
	Node0xc6f54a0 [shape=record,label="{it_while.body.25|{<s0>T|<s1>F}}"];
	Node0xc6f54a0:s0 -> Node0xc6f5540;
	Node0xc6f54a0:s1 -> Node0xc6f54f0;
	Node0xc6f54f0 [shape=record,label="{it_if.end.28}"];
	Node0xc6f54f0 -> Node0xc6f5450;
	Node0xc6f5540 [shape=record,label="{it_while.end.31|{<s0>T|<s1>F}}"];
	Node0xc6f5540:s0 -> Node0xc6f55e0;
	Node0xc6f5540:s1 -> Node0xc6f5590;
	Node0xc6f5590 [shape=record,label="{pd_while.end.31.for.inc_crit_edge}"];
	Node0xc6f5590 -> Node0xc6f56d0;
	Node0xc6f55e0 [shape=record,label="{pd_while.end.31.if.then.33_crit_edge}"];
	Node0xc6f55e0 -> Node0xc6f5680;
	Node0xc6f5630 [shape=record,label="{pd_if.then.33.loopexit}"];
	Node0xc6f5630 -> Node0xc6f5680;
	Node0xc6f5680 [shape=record,label="{pd_if.then.33}"];
	Node0xc6f5680 -> Node0xfdedf60;
	Node0xfdedf60 [shape=record,label="{it_if.then.33.split1}"];
	Node0xfdedf60 -> Node0xfdee200;
	Node0xfdee200 [shape=record,label="{pd_if.then.33.split}"];
	Node0xfdee200 -> Node0xc6f56d0;
	Node0xc6f56d0 [shape=record,label="{it_for.inc}"];
	Node0xc6f56d0 -> Node0xc6f52c0;
}
