digraph "CFG for 'optimize_reg_copy_2_for.cond' function" {
	label="CFG for 'optimize_reg_copy_2_for.cond' function";

	Node0xba69010 [shape=record,label="{newFuncRoot}"];
	Node0xba69010 -> Node0xba69b60;
	Node0xba69060 [shape=record,label="{for.cond.for.end.135.loopexit_crit_edge.exitStub}"];
	Node0xba699d0 [shape=record,label="{for.body.for.end.135.loopexit_crit_edge.exitStub}"];
	Node0xba69a20 [shape=record,label="{for.cond.52.preheader.exitStub}"];
	Node0xba69a70 [shape=record,label="{if.end.111.for.end.135.loopexit_crit_edge.exitStub}"];
	Node0xba69ac0 [shape=record,label="{lor.lhs.false.for.end.135.loopexit_crit_edge.exitStub}"];
	Node0xba69b10 [shape=record,label="{land.lhs.true.121.for.end.135.loopexit_crit_edge.exitStub}"];
	Node0xba69b60 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0xba69b60:s0 -> Node0xba69bb0;
	Node0xba69b60:s1 -> Node0xba69060;
	Node0xba69bb0 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0xba69bb0:s0 -> Node0xba699d0;
	Node0xba69bb0:s1 -> Node0xba69c00;
	Node0xba69c00 [shape=record,label="{it_if.else|{<s0>T|<s1>F}}"];
	Node0xba69c00:s0 -> Node0xba69ca0;
	Node0xba69c00:s1 -> Node0xba69c50;
	Node0xba69c50 [shape=record,label="{pd_if.else.for.inc.131_crit_edge}"];
	Node0xba69c50 -> Node0xba6a290;
	Node0xba69ca0 [shape=record,label="{it_if.end.10|{<s0>T|<s1>F}}"];
	Node0xba69ca0:s0 -> Node0xba69d40;
	Node0xba69ca0:s1 -> Node0xba69cf0;
	Node0xba69cf0 [shape=record,label="{it_if.end.10.cond.end.34_crit_edge}"];
	Node0xba69cf0 -> Node0xba69e30;
	Node0xba69d40 [shape=record,label="{it_cond.true|{<s0>T|<s1>F}}"];
	Node0xba69d40:s0 -> Node0xba69de0;
	Node0xba69d40:s1 -> Node0xba69d90;
	Node0xba69d90 [shape=record,label="{it_cond.false}"];
	Node0xba69d90 -> Node0xba69e30;
	Node0xba69de0 [shape=record,label="{pd_cond.true.cond.end.34_crit_edge}"];
	Node0xba69de0 -> Node0xba69e30;
	Node0xba69e30 [shape=record,label="{it_cond.end.34|{<s0>T|<s1>F}}"];
	Node0xba69e30:s0 -> Node0xba69ed0;
	Node0xba69e30:s1 -> Node0xba69e80;
	Node0xba69e80 [shape=record,label="{pd_cond.end.34.if.end.111_crit_edge}"];
	Node0xba69e80 -> Node0xba6a0b0;
	Node0xba69ed0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0xba69ed0:s0 -> Node0xba69f70;
	Node0xba69ed0:s1 -> Node0xba69f20;
	Node0xba69f20 [shape=record,label="{pd_land.lhs.true.if.end.111_crit_edge}"];
	Node0xba69f20 -> Node0xba6a0b0;
	Node0xba69f70 [shape=record,label="{it_land.lhs.true.42|{<s0>T|<s1>F}}"];
	Node0xba69f70:s0 -> Node0xba6a010;
	Node0xba69f70:s1 -> Node0xba69fc0;
	Node0xba69fc0 [shape=record,label="{pd_land.lhs.true.42.if.end.111_crit_edge}"];
	Node0xba69fc0 -> Node0xba6a0b0;
	Node0xba6a010 [shape=record,label="{it_land.lhs.true.48|{<s0>T|<s1>F}}"];
	Node0xba6a010:s0 -> Node0xba69a20;
	Node0xba6a010:s1 -> Node0xba6a060;
	Node0xba6a060 [shape=record,label="{pd_land.lhs.true.48.if.end.111_crit_edge}"];
	Node0xba6a060 -> Node0xba6a0b0;
	Node0xba6a0b0 [shape=record,label="{it_if.end.111|{<s0>T|<s1>F}}"];
	Node0xba6a0b0:s0 -> Node0xba69a70;
	Node0xba6a0b0:s1 -> Node0xba6a100;
	Node0xba6a100 [shape=record,label="{it_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0xba6a100:s0 -> Node0xba69ac0;
	Node0xba6a100:s1 -> Node0xba6a150;
	Node0xba6a150 [shape=record,label="{it_lor.lhs.false.116|{<s0>T|<s1>F}}"];
	Node0xba6a150:s0 -> Node0xba6a1f0;
	Node0xba6a150:s1 -> Node0xba6a1a0;
	Node0xba6a1a0 [shape=record,label="{pd_lor.lhs.false.116.for.inc.131_crit_edge}"];
	Node0xba6a1a0 -> Node0xba6a290;
	Node0xba6a1f0 [shape=record,label="{it_land.lhs.true.121|{<s0>T|<s1>F}}"];
	Node0xba6a1f0:s0 -> Node0xba69b10;
	Node0xba6a1f0:s1 -> Node0xba6a240;
	Node0xba6a240 [shape=record,label="{pd_land.lhs.true.121.for.inc.131_crit_edge}"];
	Node0xba6a240 -> Node0xba6a290;
	Node0xba6a290 [shape=record,label="{it_for.inc.131}"];
	Node0xba6a290 -> Node0xba69b60;
}
