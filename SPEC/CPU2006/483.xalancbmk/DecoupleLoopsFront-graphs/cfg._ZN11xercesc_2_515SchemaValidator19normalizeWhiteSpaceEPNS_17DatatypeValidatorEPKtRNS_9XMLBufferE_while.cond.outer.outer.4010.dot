digraph "CFG for '_ZN11xercesc_2_515SchemaValidator19normalizeWhiteSpaceEPNS_17DatatypeValidatorEPKtRNS_9XMLBufferE_while.cond.outer.outer' function" {
	label="CFG for '_ZN11xercesc_2_515SchemaValidator19normalizeWhiteSpaceEPNS_17DatatypeValidatorEPKtRNS_9XMLBufferE_while.cond.outer.outer' function";

	Node0x99ebfb0 [shape=record,label="{newFuncRoot}"];
	Node0x99ebfb0 -> Node0x99ec050;
	Node0x99ec000 [shape=record,label="{while.end.exitStub}"];
	Node0x99ec050 [shape=record,label="{pd_while.cond.outer.outer}"];
	Node0x99ec050 -> Node0x99ec0a0;
	Node0x99ec0a0 [shape=record,label="{pd_while.cond.outer}"];
	Node0x99ec0a0 -> Node0x99ec0f0;
	Node0x99ec0f0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x99ec0f0:s0 -> Node0x99ec140;
	Node0x99ec0f0:s1 -> Node0x99ec000;
	Node0x99ec140 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x99ec140:s0 -> Node0x99ec4b0;
	Node0x99ec140:s1 -> Node0x99ec190;
	Node0x99ec190 [shape=record,label="{it_if.else|{<s0>def|<s1>0|<s2>1}}"];
	Node0x99ec190:s0 -> Node0x99ec460;
	Node0x99ec190:s1 -> Node0x99ec2d0;
	Node0x99ec190:s2 -> Node0x99ec1e0;
	Node0x99ec1e0 [shape=record,label="{it_if.then.25|{<s0>T|<s1>F}}"];
	Node0x99ec1e0:s0 -> Node0x99ec280;
	Node0x99ec1e0:s1 -> Node0x99ec230;
	Node0x99ec230 [shape=record,label="{it_if.end.32.loopexit1}"];
	Node0x99ec230 -> Node0x99ec500;
	Node0x99ec280 [shape=record,label="{it_if.then.27}"];
	Node0x99ec280 -> Node0x99ec0a0;
	Node0x99ec2d0 [shape=record,label="{it_if.then.15|{<s0>T|<s1>F}}"];
	Node0x99ec2d0:s0 -> Node0x99ec410;
	Node0x99ec2d0:s1 -> Node0x99ec320;
	Node0x99ec320 [shape=record,label="{it_if.then.17|{<s0>T|<s1>F}}"];
	Node0x99ec320:s0 -> Node0x99ec3c0;
	Node0x99ec320:s1 -> Node0x99ec370;
	Node0x99ec370 [shape=record,label="{it_if.then.17.if.end.32_crit_edge}"];
	Node0x99ec370 -> Node0x99ec500;
	Node0x99ec3c0 [shape=record,label="{pd_if.then.19}"];
	Node0x99ec3c0 -> Node0x99ec500;
	Node0x99ec410 [shape=record,label="{it_if.else.21}"];
	Node0x99ec410 -> Node0x99ec0f0;
	Node0x99ec460 [shape=record,label="{pd_if.end.32.loopexit}"];
	Node0x99ec460 -> Node0x99ec500;
	Node0x99ec4b0 [shape=record,label="{pd_if.then.10}"];
	Node0x99ec4b0 -> Node0x99ec500;
	Node0x99ec500 [shape=record,label="{pd_if.end.32}"];
	Node0x99ec500 -> Node0xcea2f00;
	Node0xcea2f00 [shape=record,label="{it_if.end.32.split}"];
	Node0xcea2f00 -> Node0x99ec050;
}
