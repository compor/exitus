digraph "CFG for '_ZN11xercesc_2_510RangeToken15intersectRangesEPS0__while.cond' function" {
	label="CFG for '_ZN11xercesc_2_510RangeToken15intersectRangesEPS0__while.cond' function";

	Node0x9937540 [shape=record,label="{newFuncRoot}"];
	Node0x9937540 -> Node0x9937680;
	Node0x9937590 [shape=record,label="{while.cond.while.end_crit_edge.exitStub}"];
	Node0x99375e0 [shape=record,label="{land.rhs.while.end_crit_edge.exitStub}"];
	Node0x9937630 [shape=record,label="{if.else.110.exitStub}"];
	Node0x9937680 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x9937680:s0 -> Node0x99376d0;
	Node0x9937680:s1 -> Node0x9937590;
	Node0x99376d0 [shape=record,label="{it_land.rhs|{<s0>T|<s1>F}}"];
	Node0x99376d0:s0 -> Node0x9937720;
	Node0x99376d0:s1 -> Node0x99375e0;
	Node0x9937720 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x9937720:s0 -> Node0x9938be0;
	Node0x9937720:s1 -> Node0x9937770;
	Node0x9937770 [shape=record,label="{it_if.else|{<s0>T|<s1>F}}"];
	Node0x9937770:s0 -> Node0x9937860;
	Node0x9937770:s1 -> Node0x99377c0;
	Node0x99377c0 [shape=record,label="{it_if.else.101|{<s0>T|<s1>F}}"];
	Node0x99377c0:s0 -> Node0x9937810;
	Node0x99377c0:s1 -> Node0x9937630;
	Node0x9937810 [shape=record,label="{it_if.then.103}"];
	Node0x9937810 -> Node0x9938c30;
	Node0x9937860 [shape=record,label="{it_if.then.39|{<s0>T|<s1>F}}"];
	Node0x9937860:s0 -> Node0x9938b90;
	Node0x9937860:s1 -> Node0x99378b0;
	Node0x99378b0 [shape=record,label="{it_if.else.50|{<s0>T|<s1>F}}"];
	Node0x99378b0:s0 -> Node0x9938aa0;
	Node0x99378b0:s1 -> Node0x9937900;
	Node0x9937900 [shape=record,label="{it_if.else.70}"];
	Node0x9937900 -> Node0xce82830;
	Node0xce82830 [shape=record,label="{pd_if.else.70.split1}"];
	Node0xce82830 -> Node0xce82880;
	Node0xce82880 [shape=record,label="{it_if.else.70.split|{<s0>T|<s1>F}}"];
	Node0xce82880:s0 -> Node0x9938a50;
	Node0xce82880:s1 -> Node0x9937950;
	Node0x9937950 [shape=record,label="{pd_if.else.80}"];
	Node0x9937950 -> Node0xce82790;
	Node0xce82790 [shape=record,label="{it_if.else.80.split|{<s0>T|<s1>F}}"];
	Node0xce82790:s0 -> Node0x9938a00;
	Node0xce82790:s1 -> Node0x99379a0;
	Node0x99379a0 [shape=record,label="{it_if.else.95}"];
	Node0x99379a0 -> Node0x9938c30;
	Node0x9938a00 [shape=record,label="{pd_if.then.90}"];
	Node0x9938a00 -> Node0x9938c30;
	Node0x9938a50 [shape=record,label="{pd_if.then.72}"];
	Node0x9938a50 -> Node0xce826f0;
	Node0xce826f0 [shape=record,label="{it_if.then.72.split}"];
	Node0xce826f0 -> Node0x9938c30;
	Node0x9938aa0 [shape=record,label="{pd_if.then.52}"];
	Node0x9938aa0 -> Node0xce82740;
	Node0xce82740 [shape=record,label="{it_if.then.52.split|{<s0>T|<s1>F}}"];
	Node0xce82740:s0 -> Node0x9938b40;
	Node0xce82740:s1 -> Node0x9938af0;
	Node0x9938af0 [shape=record,label="{it_if.else.67}"];
	Node0x9938af0 -> Node0x9938c30;
	Node0x9938b40 [shape=record,label="{pd_if.then.62}"];
	Node0x9938b40 -> Node0x9938c30;
	Node0x9938b90 [shape=record,label="{pd_if.then.43}"];
	Node0x9938b90 -> Node0xce828d0;
	Node0xce828d0 [shape=record,label="{it_if.then.43.split}"];
	Node0xce828d0 -> Node0x9938c30;
	Node0x9938be0 [shape=record,label="{it_if.then.35}"];
	Node0x9938be0 -> Node0x9938c30;
	Node0x9938c30 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x9938c30 -> Node0x9937680;
}
