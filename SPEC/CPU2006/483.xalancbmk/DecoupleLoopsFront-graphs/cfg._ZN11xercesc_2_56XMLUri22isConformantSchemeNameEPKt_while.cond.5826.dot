digraph "CFG for '_ZN11xercesc_2_56XMLUri22isConformantSchemeNameEPKt_while.cond' function" {
	label="CFG for '_ZN11xercesc_2_56XMLUri22isConformantSchemeNameEPKt_while.cond' function";

	Node0x9baa840 [shape=record,label="{newFuncRoot}"];
	Node0x9baa840 -> Node0x9baa930;
	Node0x9baa890 [shape=record,label="{while.cond.return.loopexit_crit_edge.exitStub}"];
	Node0x9baa8e0 [shape=record,label="{land.lhs.true.return.loopexit_crit_edge.exitStub}"];
	Node0x9baa930 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x9baa930:s0 -> Node0x9baa980;
	Node0x9baa930:s1 -> Node0x9baa890;
	Node0x9baa980 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x9baa980:s0 -> Node0x9baaa70;
	Node0x9baa980:s1 -> Node0x9baa9d0;
	Node0x9baa9d0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x9baa9d0:s0 -> Node0x9baa8e0;
	Node0x9baa9d0:s1 -> Node0x9baaa20;
	Node0x9baaa20 [shape=record,label="{pd_land.lhs.true.while.cond.backedge_crit_edge}"];
	Node0x9baaa20 -> Node0x9baaac0;
	Node0x9baaa70 [shape=record,label="{pd_while.body.while.cond.backedge_crit_edge}"];
	Node0x9baaa70 -> Node0x9baaac0;
	Node0x9baaac0 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x9baaac0 -> Node0x9baa930;
}
