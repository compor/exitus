digraph "CFG for '_ZN10xalanc_1_819FormatterToXML_UTF812writeName1_1EPKt' function" {
	label="CFG for '_ZN10xalanc_1_819FormatterToXML_UTF812writeName1_1EPKt' function";

	Node0x61b9860 [shape=record,label="{entry}"];
	Node0x61b9860 -> Node0x61b98b0;
	Node0x61b98b0 [shape=record,label="{pd_while.cond.outer}"];
	Node0x61b98b0 -> Node0x61b9900;
	Node0x61b9900 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x61b9900:s0 -> Node0x61b9950;
	Node0x61b9900:s1 -> Node0x61b9a40;
	Node0x61b9950 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x61b9950:s0 -> Node0x61b99a0;
	Node0x61b9950:s1 -> Node0x61b99f0;
	Node0x61b99a0 [shape=record,label="{it_if.then}"];
	Node0x61b99a0 -> Node0x61b9900;
	Node0x61b99f0 [shape=record,label="{pd_if.else}"];
	Node0x61b99f0 -> Node0xb8e9660;
	Node0xb8e9660 [shape=record,label="{it_if.else.split2}"];
	Node0xb8e9660 -> Node0xb8e9700;
	Node0xb8e9700 [shape=record,label="{pd_if.else.split1}"];
	Node0xb8e9700 -> Node0xb8e9750;
	Node0xb8e9750 [shape=record,label="{it_if.else.split}"];
	Node0xb8e9750 -> Node0x61b98b0;
	Node0x61b9a40 [shape=record,label="{while.end}"];
}
