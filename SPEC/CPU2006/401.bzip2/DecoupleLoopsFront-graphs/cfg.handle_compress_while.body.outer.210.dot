digraph "CFG for 'handle_compress_while.body.outer' function" {
	label="CFG for 'handle_compress_while.body.outer' function";

	Node0x183c650 [shape=record,label="{newFuncRoot}"];
	Node0x183c650 -> Node0x183c7e0;
	Node0x183c6a0 [shape=record,label="{if.then.while.end.loopexit_crit_edge.exitStub}"];
	Node0x183c6f0 [shape=record,label="{land.lhs.true.11.while.end.loopexit_crit_edge.exitStub}"];
	Node0x183c740 [shape=record,label="{land.lhs.true.24.while.end.loopexit_crit_edge.exitStub}"];
	Node0x183c790 [shape=record,label="{while.end.loopexit1.exitStub}"];
	Node0x183c7e0 [shape=record,label="{pd_while.body.outer}"];
	Node0x183c7e0 -> Node0x183c830;
	Node0x183c830 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x183c830:s0 -> Node0x183c8d0;
	Node0x183c830:s1 -> Node0x183c880;
	Node0x183c880 [shape=record,label="{pd_while.body.if.end.30_crit_edge}"];
	Node0x183c880 -> Node0x183cce0;
	Node0x183c8d0 [shape=record,label="{pd_if.then}"];
	Node0x183c8d0 -> Node0x1c41a00;
	Node0x1c41a00 [shape=record,label="{it_if.then.split|{<s0>T|<s1>F}}"];
	Node0x1c41a00:s0 -> Node0x183c6a0;
	Node0x1c41a00:s1 -> Node0x183c920;
	Node0x183c920 [shape=record,label="{it_if.end|{<s0>T|<s1>F}}"];
	Node0x183c920:s0 -> Node0x183c9c0;
	Node0x183c920:s1 -> Node0x183c970;
	Node0x183c970 [shape=record,label="{pd_if.end.if.end.15_crit_edge}"];
	Node0x183c970 -> Node0x183cb00;
	Node0x183c9c0 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x183c9c0:s0 -> Node0x183ca60;
	Node0x183c9c0:s1 -> Node0x183ca10;
	Node0x183ca10 [shape=record,label="{pd_land.lhs.true.if.end.15_crit_edge}"];
	Node0x183ca10 -> Node0x183cb00;
	Node0x183ca60 [shape=record,label="{it_land.lhs.true.11|{<s0>T|<s1>F}}"];
	Node0x183ca60:s0 -> Node0x183c6f0;
	Node0x183ca60:s1 -> Node0x183cab0;
	Node0x183cab0 [shape=record,label="{pd_land.lhs.true.11.if.end.15_crit_edge}"];
	Node0x183cab0 -> Node0x183cb00;
	Node0x183cb00 [shape=record,label="{pd_if.end.15}"];
	Node0x183cb00 -> Node0x1c41ef0;
	Node0x1c41ef0 [shape=record,label="{it_if.end.15.split|{<s0>T|<s1>F}}"];
	Node0x1c41ef0:s0 -> Node0x183cba0;
	Node0x1c41ef0:s1 -> Node0x183cb50;
	Node0x183cb50 [shape=record,label="{pd_if.end.15.if.end.30_crit_edge}"];
	Node0x183cb50 -> Node0x183cce0;
	Node0x183cba0 [shape=record,label="{it_land.lhs.true.20|{<s0>T|<s1>F}}"];
	Node0x183cba0:s0 -> Node0x183cc40;
	Node0x183cba0:s1 -> Node0x183cbf0;
	Node0x183cbf0 [shape=record,label="{pd_land.lhs.true.20.if.end.30_crit_edge}"];
	Node0x183cbf0 -> Node0x183cce0;
	Node0x183cc40 [shape=record,label="{it_land.lhs.true.24|{<s0>T|<s1>F}}"];
	Node0x183cc40:s0 -> Node0x183c740;
	Node0x183cc40:s1 -> Node0x183cc90;
	Node0x183cc90 [shape=record,label="{pd_land.lhs.true.24.if.end.30_crit_edge}"];
	Node0x183cc90 -> Node0x183cce0;
	Node0x183cce0 [shape=record,label="{it_if.end.30|{<s0>T|<s1>F}}"];
	Node0x183cce0:s0 -> Node0x183cd80;
	Node0x183cce0:s1 -> Node0x183cd30;
	Node0x183cd30 [shape=record,label="{pd_if.end.30.while.body_crit_edge}"];
	Node0x183cd30 -> Node0x183c830;
	Node0x183cd80 [shape=record,label="{pd_if.then.34}"];
	Node0x183cd80 -> Node0x1c41df0;
	Node0x1c41df0 [shape=record,label="{it_if.then.34.split|{<s0>T|<s1>F}}"];
	Node0x1c41df0:s0 -> Node0x183ce20;
	Node0x1c41df0:s1 -> Node0x183cdd0;
	Node0x183cdd0 [shape=record,label="{pd_if.then.34.if.else_crit_edge}"];
	Node0x183cdd0 -> Node0x183cec0;
	Node0x183ce20 [shape=record,label="{it_land.lhs.true.43|{<s0>T|<s1>F}}"];
	Node0x183ce20:s0 -> Node0x183d000;
	Node0x183ce20:s1 -> Node0x183ce70;
	Node0x183ce70 [shape=record,label="{pd_land.lhs.true.43.if.else_crit_edge}"];
	Node0x183ce70 -> Node0x183cec0;
	Node0x183cec0 [shape=record,label="{it_if.else|{<s0>T|<s1>F}}"];
	Node0x183cec0:s0 -> Node0x183cfb0;
	Node0x183cec0:s1 -> Node0x183cf10;
	Node0x183cf10 [shape=record,label="{it_if.else.57|{<s0>T|<s1>F}}"];
	Node0x183cf10:s0 -> Node0x183c790;
	Node0x183cf10:s1 -> Node0x183cf60;
	Node0x183cf60 [shape=record,label="{pd_if.else.57.while.body.outer.backedge_crit_edge}"];
	Node0x183cf60 -> Node0x183d050;
	Node0x183cfb0 [shape=record,label="{pd_if.then.55}"];
	Node0x183cfb0 -> Node0x183d050;
	Node0x183d000 [shape=record,label="{pd_if.then.47}"];
	Node0x183d000 -> Node0x183d050;
	Node0x183d050 [shape=record,label="{pd_while.body.outer.backedge}"];
	Node0x183d050 -> Node0x183c7e0;
}
