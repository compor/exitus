digraph "CFG for 'BZ2_decompress_while.body.64' function" {
	label="CFG for 'BZ2_decompress_while.body.64' function";

	Node0x19b9280 [shape=record,label="{newFuncRoot}"];
	Node0x19b9280 -> Node0x19b9370;
	Node0x19b92d0 [shape=record,label="{if.then.68.exitStub}"];
	Node0x19b9320 [shape=record,label="{save_state_and_return.loopexit45.exitStub}"];
	Node0x19b9370 [shape=record,label="{it_while.body.64|{<s0>T|<s1>F}}"];
	Node0x19b9370:s0 -> Node0x19b92d0;
	Node0x19b9370:s1 -> Node0x19b93c0;
	Node0x19b93c0 [shape=record,label="{it_if.end.78|{<s0>T|<s1>F}}"];
	Node0x19b93c0:s0 -> Node0x19b9320;
	Node0x19b93c0:s1 -> Node0x19b9410;
	Node0x19b9410 [shape=record,label="{pd_if.end.84|{<s0>T|<s1>F}}"];
	Node0x19b9410:s0 -> Node0x19b94b0;
	Node0x19b9410:s1 -> Node0x19b9460;
	Node0x19b9460 [shape=record,label="{pd_if.end.84.while.body.64.backedge_crit_edge}"];
	Node0x19b9460 -> Node0x19b9500;
	Node0x19b94b0 [shape=record,label="{pd_if.then.107}"];
	Node0x19b94b0 -> Node0x19b9500;
	Node0x19b9500 [shape=record,label="{pd_while.body.64.backedge}"];
	Node0x19b9500 -> Node0x19b9370;
}
