digraph "CFG for '_ZN3pov16Parse_Bound_ClipEv_while.cond' function" {
	label="CFG for '_ZN3pov16Parse_Bound_ClipEv_while.cond' function";

	Node0x2723c70 [shape=record,label="{newFuncRoot}"];
	Node0x2723c70 -> Node0x2723d10;
	Node0x2723cc0 [shape=record,label="{while.cond.8.preheader.exitStub}"];
	Node0x2723d10 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x2723d10:s0 -> Node0x2724670;
	Node0x2723d10:s1 -> Node0x2723cc0;
	Node0x2724670 [shape=record,label="{pd_while.body|{<s0>T|<s1>F}}"];
	Node0x2724670:s0 -> Node0x2724710;
	Node0x2724670:s1 -> Node0x27246c0;
	Node0x27246c0 [shape=record,label="{pd_while.body.if.end_crit_edge}"];
	Node0x27246c0 -> Node0x2724760;
	Node0x2724710 [shape=record,label="{pd_if.then}"];
	Node0x2724710 -> Node0x2724760;
	Node0x2724760 [shape=record,label="{pd_if.end|{<s0>T|<s1>F}}"];
	Node0x2724760:s0 -> Node0x2724800;
	Node0x2724760:s1 -> Node0x27247b0;
	Node0x27247b0 [shape=record,label="{pd_if.end.while.cond.backedge_crit_edge}"];
	Node0x27247b0 -> Node0x2724850;
	Node0x2724800 [shape=record,label="{pd_if.then.6}"];
	Node0x2724800 -> Node0x2724850;
	Node0x2724850 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x2724850 -> Node0x2723d10;
}
