digraph "CFG for '_ZN3povL25All_Fractal_IntersectionsEPNS_13Object_StructEPNS_10Ray_StructEPNS_13istack_structE_while.cond' function" {
	label="CFG for '_ZN3povL25All_Fractal_IntersectionsEPNS_13Object_StructEPNS_10Ray_StructEPNS_13istack_structE_while.cond' function";

	Node0x2483d60 [shape=record,label="{newFuncRoot}"];
	Node0x2483d60 -> Node0x2483ef0;
	Node0x2483db0 [shape=record,label="{while.cond.while.end.130_crit_edge.exitStub}"];
	Node0x2483e00 [shape=record,label="{if.then.49.exitStub}"];
	Node0x2483e50 [shape=record,label="{if.then.118.while.end.130_crit_edge.exitStub}"];
	Node0x2483ea0 [shape=record,label="{if.then.77.exitStub}"];
	Node0x2483ef0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x2483ef0:s0 -> Node0x2483f40;
	Node0x2483ef0:s1 -> Node0x2483db0;
	Node0x2483f40 [shape=record,label="{pd_while.body.43.preheader}"];
	Node0x2483f40 -> Node0x2483f90;
	Node0x2483f90 [shape=record,label="{pd_while.body.43|{<s0>T|<s1>F}}"];
	Node0x2483f90:s0 -> Node0x2484030;
	Node0x2483f90:s1 -> Node0x2483fe0;
	Node0x2483fe0 [shape=record,label="{pd_while.body.43.if.end.46_crit_edge}"];
	Node0x2483fe0 -> Node0x2484080;
	Node0x2484030 [shape=record,label="{pd_if.then.45}"];
	Node0x2484030 -> Node0x2484080;
	Node0x2484080 [shape=record,label="{pd_if.end.46}"];
	Node0x2484080 -> Node0x3648c80;
	Node0x3648c80 [shape=record,label="{it_if.end.46.split|{<s0>T|<s1>F}}"];
	Node0x3648c80:s0 -> Node0x2483e00;
	Node0x3648c80:s1 -> Node0x24840d0;
	Node0x24840d0 [shape=record,label="{pd_if.end.53}"];
	Node0x24840d0 -> Node0x375a460;
	Node0x375a460 [shape=record,label="{it_if.end.53.split|{<s0>T|<s1>F}}"];
	Node0x375a460:s0 -> Node0x2484170;
	Node0x375a460:s1 -> Node0x2484120;
	Node0x2484120 [shape=record,label="{pd_if.else.62}"];
	Node0x2484120 -> Node0x2483f90;
	Node0x2484170 [shape=record,label="{pd_if.then.61}"];
	Node0x2484170 -> Node0x24841c0;
	Node0x24841c0 [shape=record,label="{it_while.cond.64|{<s0>T|<s1>F}}"];
	Node0x24841c0:s0 -> Node0x2484620;
	Node0x24841c0:s1 -> Node0x2484210;
	Node0x2484210 [shape=record,label="{pd_while.end.83|{<s0>T|<s1>F}}"];
	Node0x2484210:s0 -> Node0x2484350;
	Node0x2484210:s1 -> Node0x2484260;
	Node0x2484260 [shape=record,label="{pd_if.else.91|{<s0>T|<s1>F}}"];
	Node0x2484260:s0 -> Node0x2484300;
	Node0x2484260:s1 -> Node0x24842b0;
	Node0x24842b0 [shape=record,label="{pd_if.else.91.if.end.98_crit_edge}"];
	Node0x24842b0 -> Node0x24843a0;
	Node0x2484300 [shape=record,label="{pd_if.then.93}"];
	Node0x2484300 -> Node0x24843a0;
	Node0x2484350 [shape=record,label="{pd_if.then.85}"];
	Node0x2484350 -> Node0x24843a0;
	Node0x24843a0 [shape=record,label="{pd_if.end.98|{<s0>T|<s1>F}}"];
	Node0x24843a0:s0 -> Node0x2484440;
	Node0x24843a0:s1 -> Node0x24843f0;
	Node0x24843f0 [shape=record,label="{pd_if.else.109}"];
	Node0x24843f0 -> Node0x2484490;
	Node0x2484440 [shape=record,label="{pd_if.then.101}"];
	Node0x2484440 -> Node0x2484490;
	Node0x2484490 [shape=record,label="{it_if.end.115|{<s0>T|<s1>F}}"];
	Node0x2484490:s0 -> Node0x2484530;
	Node0x2484490:s1 -> Node0x24844e0;
	Node0x24844e0 [shape=record,label="{pd_if.end.115.if.end.127_crit_edge}"];
	Node0x24844e0 -> Node0x24845d0;
	Node0x2484530 [shape=record,label="{pd_if.then.118}"];
	Node0x2484530 -> Node0x3648b30;
	Node0x3648b30 [shape=record,label="{it_if.then.118.split|{<s0>T|<s1>F}}"];
	Node0x3648b30:s0 -> Node0x2484580;
	Node0x3648b30:s1 -> Node0x2483e50;
	Node0x2484580 [shape=record,label="{pd_if.then.118.if.end.127_crit_edge}"];
	Node0x2484580 -> Node0x24845d0;
	Node0x24845d0 [shape=record,label="{pd_if.end.127}"];
	Node0x24845d0 -> Node0x2483ef0;
	Node0x2484620 [shape=record,label="{pd_while.body.66}"];
	Node0x2484620 -> Node0x3648940;
	Node0x3648940 [shape=record,label="{it_while.body.66.split|{<s0>T|<s1>F}}"];
	Node0x3648940:s0 -> Node0x24846c0;
	Node0x3648940:s1 -> Node0x2484670;
	Node0x2484670 [shape=record,label="{pd_while.body.66.while.cond.64.backedge_crit_edge}"];
	Node0x2484670 -> Node0x2484760;
	Node0x24846c0 [shape=record,label="{pd_if.then.72}"];
	Node0x24846c0 -> Node0x36488f0;
	Node0x36488f0 [shape=record,label="{it_if.then.72.split|{<s0>T|<s1>F}}"];
	Node0x36488f0:s0 -> Node0x2483ea0;
	Node0x36488f0:s1 -> Node0x2484710;
	Node0x2484710 [shape=record,label="{pd_if.then.72.while.cond.64.backedge_crit_edge}"];
	Node0x2484710 -> Node0x2484760;
	Node0x2484760 [shape=record,label="{pd_while.cond.64.backedge}"];
	Node0x2484760 -> Node0x24841c0;
}
