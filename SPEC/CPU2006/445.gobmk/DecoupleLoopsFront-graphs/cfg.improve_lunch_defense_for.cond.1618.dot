digraph "CFG for 'improve_lunch_defense_for.cond' function" {
	label="CFG for 'improve_lunch_defense_for.cond' function";

	Node0x4225390 [shape=record,label="{newFuncRoot}"];
	Node0x4225390 -> Node0x4225480;
	Node0x42253e0 [shape=record,label="{return.loopexit.exitStub}"];
	Node0x4225430 [shape=record,label="{if.then.24.exitStub}"];
	Node0x4225480 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x4225480:s0 -> Node0x42254d0;
	Node0x4225480:s1 -> Node0x42253e0;
	Node0x42254d0 [shape=record,label="{it_for.body|{<s0>T|<s1>F}}"];
	Node0x42254d0:s0 -> Node0x4225570;
	Node0x42254d0:s1 -> Node0x4225520;
	Node0x4225520 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x4225520 -> Node0x4225750;
	Node0x4225570 [shape=record,label="{it_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x4225570:s0 -> Node0x4225610;
	Node0x4225570:s1 -> Node0x42255c0;
	Node0x42255c0 [shape=record,label="{pd_land.lhs.true.for.inc_crit_edge}"];
	Node0x42255c0 -> Node0x4225750;
	Node0x4225610 [shape=record,label="{pd_if.then}"];
	Node0x4225610 -> Node0x50ec970;
	Node0x50ec970 [shape=record,label="{it_if.then.split|{<s0>T|<s1>F}}"];
	Node0x50ec970:s0 -> Node0x42256b0;
	Node0x50ec970:s1 -> Node0x4225660;
	Node0x4225660 [shape=record,label="{pd_if.then.for.inc_crit_edge}"];
	Node0x4225660 -> Node0x4225750;
	Node0x42256b0 [shape=record,label="{it_land.lhs.true.22|{<s0>T|<s1>F}}"];
	Node0x42256b0:s0 -> Node0x4225430;
	Node0x42256b0:s1 -> Node0x4225700;
	Node0x4225700 [shape=record,label="{pd_land.lhs.true.22.for.inc_crit_edge}"];
	Node0x4225700 -> Node0x4225750;
	Node0x4225750 [shape=record,label="{it_for.inc}"];
	Node0x4225750 -> Node0x4225480;
}
