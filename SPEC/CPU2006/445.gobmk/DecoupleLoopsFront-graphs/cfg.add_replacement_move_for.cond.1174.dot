digraph "CFG for 'add_replacement_move_for.cond' function" {
	label="CFG for 'add_replacement_move_for.cond' function";

	Node0x4099270 [shape=record,label="{newFuncRoot}"];
	Node0x4099270 -> Node0x4099310;
	Node0x40992c0 [shape=record,label="{for.end.loopexit.exitStub}"];
	Node0x4099310 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x4099310:s0 -> Node0x4099360;
	Node0x4099310:s1 -> Node0x40992c0;
	Node0x4099360 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x4099360:s0 -> Node0x4099400;
	Node0x4099360:s1 -> Node0x40993b0;
	Node0x40993b0 [shape=record,label="{pd_for.body.for.inc_crit_edge}"];
	Node0x40993b0 -> Node0x4099e30;
	Node0x4099400 [shape=record,label="{pd_land.lhs.true.86|{<s0>T|<s1>F}}"];
	Node0x4099400:s0 -> Node0x4099de0;
	Node0x4099400:s1 -> Node0x4099450;
	Node0x4099450 [shape=record,label="{pd_land.lhs.true.86.for.inc_crit_edge}"];
	Node0x4099450 -> Node0x4099e30;
	Node0x4099de0 [shape=record,label="{pd_if.then.91}"];
	Node0x4099de0 -> Node0x4099e30;
	Node0x4099e30 [shape=record,label="{it_for.inc}"];
	Node0x4099e30 -> Node0x4099310;
}
