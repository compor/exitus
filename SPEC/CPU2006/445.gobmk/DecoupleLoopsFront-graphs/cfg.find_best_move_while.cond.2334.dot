digraph "CFG for 'find_best_move_while.cond' function" {
	label="CFG for 'find_best_move_while.cond' function";

	Node0x45f96d0 [shape=record,label="{newFuncRoot}"];
	Node0x45f96d0 -> Node0x45f9770;
	Node0x45f9720 [shape=record,label="{while.end.exitStub}"];
	Node0x45f9770 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x45f9770:s0 -> Node0x45f97c0;
	Node0x45f9770:s1 -> Node0x45f9720;
	Node0x45f97c0 [shape=record,label="{it_for.cond.preheader}"];
	Node0x45f97c0 -> Node0x45f9810;
	Node0x45f9810 [shape=record,label="{it_for.cond|{<s0>T|<s1>F}}"];
	Node0x45f9810:s0 -> Node0x45f9f40;
	Node0x45f9810:s1 -> Node0x45f9860;
	Node0x45f9860 [shape=record,label="{it_for.end|{<s0>T|<s1>F}}"];
	Node0x45f9860:s0 -> Node0x45f9900;
	Node0x45f9860:s1 -> Node0x45f98b0;
	Node0x45f98b0 [shape=record,label="{pd_for.end.if.else.53_crit_edge}"];
	Node0x45f98b0 -> Node0x45f99a0;
	Node0x45f9900 [shape=record,label="{it_land.lhs.true.37|{<s0>T|<s1>F}}"];
	Node0x45f9900:s0 -> Node0x45f9db0;
	Node0x45f9900:s1 -> Node0x45f9950;
	Node0x45f9950 [shape=record,label="{pd_land.lhs.true.37.if.else.53_crit_edge}"];
	Node0x45f9950 -> Node0x45f99a0;
	Node0x45f99a0 [shape=record,label="{it_if.else.53|{<s0>T|<s1>F}}"];
	Node0x45f99a0:s0 -> Node0x45f9a40;
	Node0x45f99a0:s1 -> Node0x45f99f0;
	Node0x45f99f0 [shape=record,label="{it_if.else.53.while.cond.backedge_crit_edge}"];
	Node0x45f99f0 -> Node0x45f9ef0;
	Node0x45f9a40 [shape=record,label="{it_if.then.57|{<s0>T|<s1>F}}"];
	Node0x45f9a40:s0 -> Node0x45f9d60;
	Node0x45f9a40:s1 -> Node0x45f9a90;
	Node0x45f9a90 [shape=record,label="{it_if.then.61|{<s0>T|<s1>F}}"];
	Node0x45f9a90:s0 -> Node0x45f9b30;
	Node0x45f9a90:s1 -> Node0x45f9ae0;
	Node0x45f9ae0 [shape=record,label="{it_if.then.61.while.cond.backedge_crit_edge}"];
	Node0x45f9ae0 -> Node0x45f9ef0;
	Node0x45f9b30 [shape=record,label="{pd_if.then.66|{<s0>T|<s1>F}}"];
	Node0x45f9b30:s0 -> Node0x45f9bd0;
	Node0x45f9b30:s1 -> Node0x45f9b80;
	Node0x45f9b80 [shape=record,label="{pd_if.then.66.cond.end.72_crit_edge}"];
	Node0x45f9b80 -> Node0x45f9c20;
	Node0x45f9bd0 [shape=record,label="{pd_cond.false.69}"];
	Node0x45f9bd0 -> Node0x45f9c20;
	Node0x45f9c20 [shape=record,label="{pd_cond.end.72|{<s0>T|<s1>F}}"];
	Node0x45f9c20:s0 -> Node0x45f9cc0;
	Node0x45f9c20:s1 -> Node0x45f9c70;
	Node0x45f9c70 [shape=record,label="{pd_cond.end.72.cond.end.88_crit_edge}"];
	Node0x45f9c70 -> Node0x45f9d10;
	Node0x45f9cc0 [shape=record,label="{pd_cond.false.82}"];
	Node0x45f9cc0 -> Node0x45f9d10;
	Node0x45f9d10 [shape=record,label="{pd_cond.end.88}"];
	Node0x45f9d10 -> Node0x45f9ef0;
	Node0x45f9d60 [shape=record,label="{it_if.then.57.while.cond.backedge_crit_edge}"];
	Node0x45f9d60 -> Node0x45f9ef0;
	Node0x45f9db0 [shape=record,label="{pd_if.then.40|{<s0>T|<s1>F}}"];
	Node0x45f9db0:s0 -> Node0x45f9e50;
	Node0x45f9db0:s1 -> Node0x45f9e00;
	Node0x45f9e00 [shape=record,label="{pd_if.then.40.cond.end.45_crit_edge}"];
	Node0x45f9e00 -> Node0x45f9ea0;
	Node0x45f9e50 [shape=record,label="{pd_cond.false.43}"];
	Node0x45f9e50 -> Node0x45f9ea0;
	Node0x45f9ea0 [shape=record,label="{pd_cond.end.45}"];
	Node0x45f9ea0 -> Node0x45f9ef0;
	Node0x45f9ef0 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x45f9ef0 -> Node0x45f9770;
	Node0x45f9f40 [shape=record,label="{it_for.body}"];
	Node0x45f9f40 -> Node0x50ccdd0;
	Node0x50ccdd0 [shape=record,label="{pd_for.body.split|{<s0>T|<s1>F}}"];
	Node0x50ccdd0:s0 -> Node0x45f9fe0;
	Node0x50ccdd0:s1 -> Node0x45f9f90;
	Node0x45f9f90 [shape=record,label="{pd_for.body.if.end_crit_edge}"];
	Node0x45f9f90 -> Node0x45fa0d0;
	Node0x45f9fe0 [shape=record,label="{pd_land.lhs.true|{<s0>T|<s1>F}}"];
	Node0x45f9fe0:s0 -> Node0x45fa080;
	Node0x45f9fe0:s1 -> Node0x45fa030;
	Node0x45fa030 [shape=record,label="{pd_land.lhs.true.for.inc_crit_edge}"];
	Node0x45fa030 -> Node0x45fa490;
	Node0x45fa080 [shape=record,label="{pd_land.lhs.true.if.end_crit_edge}"];
	Node0x45fa080 -> Node0x45fa0d0;
	Node0x45fa0d0 [shape=record,label="{pd_if.end|{<s0>T|<s1>F}}"];
	Node0x45fa0d0:s0 -> Node0x45fa170;
	Node0x45fa0d0:s1 -> Node0x45fa120;
	Node0x45fa120 [shape=record,label="{pd_if.end.for.inc_crit_edge}"];
	Node0x45fa120 -> Node0x45fa490;
	Node0x45fa170 [shape=record,label="{pd_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0x45fa170:s0 -> Node0x45fa210;
	Node0x45fa170:s1 -> Node0x45fa1c0;
	Node0x45fa1c0 [shape=record,label="{pd_lor.lhs.false.for.inc_crit_edge}"];
	Node0x45fa1c0 -> Node0x45fa490;
	Node0x45fa210 [shape=record,label="{pd_if.then.19|{<s0>T|<s1>F}}"];
	Node0x45fa210:s0 -> Node0x45fa440;
	Node0x45fa210:s1 -> Node0x45fa260;
	Node0x45fa260 [shape=record,label="{pd_lor.lhs.false.21|{<s0>T|<s1>F}}"];
	Node0x45fa260:s0 -> Node0x45fa3f0;
	Node0x45fa260:s1 -> Node0x45fa2b0;
	Node0x45fa2b0 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x45fa2b0:s0 -> Node0x45fa350;
	Node0x45fa2b0:s1 -> Node0x45fa300;
	Node0x45fa300 [shape=record,label="{pd_if.else.cond.end_crit_edge}"];
	Node0x45fa300 -> Node0x45fa3a0;
	Node0x45fa350 [shape=record,label="{pd_cond.false}"];
	Node0x45fa350 -> Node0x45fa3a0;
	Node0x45fa3a0 [shape=record,label="{pd_cond.end}"];
	Node0x45fa3a0 -> Node0x45fa490;
	Node0x45fa3f0 [shape=record,label="{pd_lor.lhs.false.21.for.inc_crit_edge}"];
	Node0x45fa3f0 -> Node0x45fa490;
	Node0x45fa440 [shape=record,label="{pd_if.then.19.for.inc_crit_edge}"];
	Node0x45fa440 -> Node0x45fa490;
	Node0x45fa490 [shape=record,label="{it_for.inc}"];
	Node0x45fa490 -> Node0x45f9810;
}
