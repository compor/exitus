digraph "CFG for 'gtp_main_loop_while.cond.outer' function" {
	label="CFG for 'gtp_main_loop_while.cond.outer' function";

	Node0x47ab580 [shape=record,label="{newFuncRoot}"];
	Node0x47ab580 -> Node0x47ab670;
	Node0x47ab5d0 [shape=record,label="{while.cond.while.end_crit_edge.exitStub}"];
	Node0x47ab620 [shape=record,label="{while.body.while.end_crit_edge.exitStub}"];
	Node0x47ab670 [shape=record,label="{pd_while.cond.outer}"];
	Node0x47ab670 -> Node0x47ab6c0;
	Node0x47ab6c0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x47ab6c0:s0 -> Node0x47ab710;
	Node0x47ab6c0:s1 -> Node0x47ab5d0;
	Node0x47ab710 [shape=record,label="{it_while.body|{<s0>T|<s1>F}}"];
	Node0x47ab710:s0 -> Node0x47ab760;
	Node0x47ab710:s1 -> Node0x47ab620;
	Node0x47ab760 [shape=record,label="{pd_if.end}"];
	Node0x47ab760 -> Node0x47ab7b0;
	Node0x47ab7b0 [shape=record,label="{pd_for.cond|{<s0>T|<s1>F}}"];
	Node0x47ab7b0:s0 -> Node0x47ab850;
	Node0x47ab7b0:s1 -> Node0x47ab800;
	Node0x47ab800 [shape=record,label="{pd_for.cond.for.end_crit_edge}"];
	Node0x47ab800 -> Node0x47aba30;
	Node0x47ab850 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x47ab850:s0 -> Node0x47ac070;
	Node0x47ab850:s1 -> Node0x47ab8a0;
	Node0x47ab8a0 [shape=record,label="{pd_if.else|{<s0>T|<s1>F}}"];
	Node0x47ab8a0:s0 -> Node0x47ac020;
	Node0x47ab8a0:s1 -> Node0x47ab8f0;
	Node0x47ab8f0 [shape=record,label="{pd_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0x47ab8f0:s0 -> Node0x47abfd0;
	Node0x47ab8f0:s1 -> Node0x47ab940;
	Node0x47ab940 [shape=record,label="{pd_if.else.26|{<s0>T|<s1>F}}"];
	Node0x47ab940:s0 -> Node0x47ab9e0;
	Node0x47ab940:s1 -> Node0x47ab990;
	Node0x47ab990 [shape=record,label="{pd_if.else.31}"];
	Node0x47ab990 -> Node0x47ac0c0;
	Node0x47ab9e0 [shape=record,label="{pd_if.else.26.for.end_crit_edge}"];
	Node0x47ab9e0 -> Node0x47aba30;
	Node0x47aba30 [shape=record,label="{pd_for.end}"];
	Node0x47aba30 -> Node0x4d95550;
	Node0x4d95550 [shape=record,label="{it_for.end.split|{<s0>T|<s1>F}}"];
	Node0x4d95550:s0 -> Node0x47abad0;
	Node0x4d95550:s1 -> Node0x47aba80;
	Node0x47aba80 [shape=record,label="{pd_if.else.41}"];
	Node0x47aba80 -> Node0x47abb20;
	Node0x47abad0 [shape=record,label="{it_if.then.40}"];
	Node0x47abad0 -> Node0x47abb20;
	Node0x47abb20 [shape=record,label="{it_if.end.42|{<s0>T|<s1>F}}"];
	Node0x47abb20:s0 -> Node0x47abf80;
	Node0x47abb20:s1 -> Node0x47abb70;
	Node0x47abb70 [shape=record,label="{it_if.end.48}"];
	Node0x47abb70 -> Node0x47abbc0;
	Node0x47abbc0 [shape=record,label="{it_for.cond.51|{<s0>T|<s1>F}}"];
	Node0x47abbc0:s0 -> Node0x47abc60;
	Node0x47abbc0:s1 -> Node0x47abc10;
	Node0x47abc10 [shape=record,label="{pd_for.end.71.loopexit}"];
	Node0x47abc10 -> Node0x47abd50;
	Node0x47abc60 [shape=record,label="{it_for.body.56|{<s0>T|<s1>F}}"];
	Node0x47abc60:s0 -> Node0x47abd00;
	Node0x47abc60:s1 -> Node0x47abcb0;
	Node0x47abcb0 [shape=record,label="{it_for.inc.69}"];
	Node0x47abcb0 -> Node0x47abbc0;
	Node0x47abd00 [shape=record,label="{it_if.then.64}"];
	Node0x47abd00 -> Node0x47abd50;
	Node0x47abd50 [shape=record,label="{pd_for.end.71|{<s0>T|<s1>F}}"];
	Node0x47abd50:s0 -> Node0x47abdf0;
	Node0x47abd50:s1 -> Node0x47abda0;
	Node0x47abda0 [shape=record,label="{pd_for.end.71.if.end.79_crit_edge}"];
	Node0x47abda0 -> Node0x47abe40;
	Node0x47abdf0 [shape=record,label="{pd_if.then.77}"];
	Node0x47abdf0 -> Node0x47abe40;
	Node0x47abe40 [shape=record,label="{pd_if.end.79|{<s0>T|<s1>F}}"];
	Node0x47abe40:s0 -> Node0x47abee0;
	Node0x47abe40:s1 -> Node0x47abe90;
	Node0x47abe90 [shape=record,label="{pd_if.end.79.while.cond.outer.backedge_crit_edge}"];
	Node0x47abe90 -> Node0x47abf30;
	Node0x47abee0 [shape=record,label="{pd_if.then.82}"];
	Node0x47abee0 -> Node0x47abf30;
	Node0x47abf30 [shape=record,label="{pd_while.cond.outer.backedge}"];
	Node0x47abf30 -> Node0x47ab670;
	Node0x47abf80 [shape=record,label="{pd_if.end.42.while.cond_crit_edge}"];
	Node0x47abf80 -> Node0x47ab6c0;
	Node0x47abfd0 [shape=record,label="{pd_lor.lhs.false.for.inc_crit_edge}"];
	Node0x47abfd0 -> Node0x47ac0c0;
	Node0x47ac020 [shape=record,label="{pd_if.else.for.inc_crit_edge}"];
	Node0x47ac020 -> Node0x47ac0c0;
	Node0x47ac070 [shape=record,label="{pd_if.then.7}"];
	Node0x47ac070 -> Node0x47ac0c0;
	Node0x47ac0c0 [shape=record,label="{pd_for.inc}"];
	Node0x47ac0c0 -> Node0x47ab7b0;
}
