digraph "CFG for 'ascii_free_handicap_while.body' function" {
	label="CFG for 'ascii_free_handicap_while.body' function";

	Node0x47ffb80 [shape=record,label="{newFuncRoot}"];
	Node0x47ffb80 -> Node0x47ffc70;
	Node0x47ffbd0 [shape=record,label="{return.loopexit.exitStub}"];
	Node0x47ffc20 [shape=record,label="{if.end.89.loopexit.exitStub}"];
	Node0x47ffc70 [shape=record,label="{pd_while.body}"];
	Node0x47ffc70 -> Node0x5634d70;
	Node0x5634d70 [shape=record,label="{it_while.body.split|{<s0>T|<s1>F}}"];
	Node0x5634d70:s0 -> Node0x47ffcc0;
	Node0x5634d70:s1 -> Node0x47ffbd0;
	Node0x47ffcc0 [shape=record,label="{pd_for.cond.preheader}"];
	Node0x47ffcc0 -> Node0x47ffd10;
	Node0x47ffd10 [shape=record,label="{pd_for.cond|{<s0>T|<s1>F}}"];
	Node0x47ffd10:s0 -> Node0x4800210;
	Node0x47ffd10:s1 -> Node0x47ffd60;
	Node0x47ffd60 [shape=record,label="{it_for.end|{<s0>T|<s1>F}}"];
	Node0x47ffd60:s0 -> Node0x47ffea0;
	Node0x47ffd60:s1 -> Node0x47ffdb0;
	Node0x47ffdb0 [shape=record,label="{pd_if.then.34|{<s0>T|<s1>F}}"];
	Node0x47ffdb0:s0 -> Node0x47ffe50;
	Node0x47ffdb0:s1 -> Node0x47ffe00;
	Node0x47ffe00 [shape=record,label="{pd_if.then.36}"];
	Node0x47ffe00 -> Node0x48001c0;
	Node0x47ffe50 [shape=record,label="{pd_if.else.38}"];
	Node0x47ffe50 -> Node0x48001c0;
	Node0x47ffea0 [shape=record,label="{it_if.else.48|{<s0>T|<s1>F}}"];
	Node0x47ffea0:s0 -> Node0x47fff40;
	Node0x47ffea0:s1 -> Node0x47ffef0;
	Node0x47ffef0 [shape=record,label="{pd_if.then.52}"];
	Node0x47ffef0 -> Node0x48001c0;
	Node0x47fff40 [shape=record,label="{it_if.else.53|{<s0>T|<s1>F}}"];
	Node0x47fff40:s0 -> Node0x4800030;
	Node0x47fff40:s1 -> Node0x47fff90;
	Node0x47fff90 [shape=record,label="{it_if.then.57|{<s0>T|<s1>F}}"];
	Node0x47fff90:s0 -> Node0x47fffe0;
	Node0x47fff90:s1 -> Node0x47ffc20;
	Node0x47fffe0 [shape=record,label="{pd_if.then.60}"];
	Node0x47fffe0 -> Node0x48001c0;
	Node0x4800030 [shape=record,label="{pd_if.else.64|{<s0>T|<s1>F}}"];
	Node0x4800030:s0 -> Node0x48000d0;
	Node0x4800030:s1 -> Node0x4800080;
	Node0x4800080 [shape=record,label="{pd_if.else.82}"];
	Node0x4800080 -> Node0x48001c0;
	Node0x48000d0 [shape=record,label="{pd_if.then.68|{<s0>T|<s1>F}}"];
	Node0x48000d0:s0 -> Node0x4800170;
	Node0x48000d0:s1 -> Node0x4800120;
	Node0x4800120 [shape=record,label="{pd_if.else.77}"];
	Node0x4800120 -> Node0x48001c0;
	Node0x4800170 [shape=record,label="{pd_if.then.75}"];
	Node0x4800170 -> Node0x48001c0;
	Node0x48001c0 [shape=record,label="{pd_while.body.backedge}"];
	Node0x48001c0 -> Node0x47ffc70;
	Node0x4800210 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x4800210:s0 -> Node0x48002b0;
	Node0x4800210:s1 -> Node0x4800260;
	Node0x4800260 [shape=record,label="{pd_for.body.cond.end_crit_edge}"];
	Node0x4800260 -> Node0x4800300;
	Node0x48002b0 [shape=record,label="{pd_cond.true}"];
	Node0x48002b0 -> Node0x4800300;
	Node0x4800300 [shape=record,label="{pd_cond.end}"];
	Node0x4800300 -> Node0x47ffd10;
}
