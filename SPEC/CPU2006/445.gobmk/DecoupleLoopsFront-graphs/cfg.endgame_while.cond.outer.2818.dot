digraph "CFG for 'endgame_while.cond.outer' function" {
	label="CFG for 'endgame_while.cond.outer' function";

	Node0x48051c0 [shape=record,label="{newFuncRoot}"];
	Node0x48051c0 -> Node0x4805300;
	Node0x4805210 [shape=record,label="{while.end.exitStub}"];
	Node0x4805260 [shape=record,label="{while.body.return.loopexit_crit_edge.exitStub}"];
	Node0x48052b0 [shape=record,label="{if.else.return.loopexit_crit_edge.exitStub}"];
	Node0x4805300 [shape=record,label="{pd_while.cond.outer}"];
	Node0x4805300 -> Node0x4805350;
	Node0x4805350 [shape=record,label="{pd_while.cond.outer1}"];
	Node0x4805350 -> Node0x48053a0;
	Node0x48053a0 [shape=record,label="{it_while.cond|{<s0>T|<s1>F}}"];
	Node0x48053a0:s0 -> Node0x48053f0;
	Node0x48053a0:s1 -> Node0x4805210;
	Node0x48053f0 [shape=record,label="{pd_while.body}"];
	Node0x48053f0 -> Node0x4d98f30;
	Node0x4d98f30 [shape=record,label="{it_while.body.split|{<s0>T|<s1>F}}"];
	Node0x4d98f30:s0 -> Node0x4805440;
	Node0x4d98f30:s1 -> Node0x4805260;
	Node0x4805440 [shape=record,label="{pd_if.end}"];
	Node0x4805440 -> Node0x4805490;
	Node0x4805490 [shape=record,label="{pd_for.cond|{<s0>T|<s1>F}}"];
	Node0x4805490:s0 -> Node0x4806b90;
	Node0x4805490:s1 -> Node0x48054e0;
	Node0x48054e0 [shape=record,label="{it_for.end|{<s0>T|<s1>F}}"];
	Node0x48054e0:s0 -> Node0x4805580;
	Node0x48054e0:s1 -> Node0x4805530;
	Node0x4805530 [shape=record,label="{it_while.cond.outer.loopexit}"];
	Node0x4805530 -> Node0x4805300;
	Node0x4805580 [shape=record,label="{it_if.else|{<s0>T|<s1>F}}"];
	Node0x4805580:s0 -> Node0x48055d0;
	Node0x4805580:s1 -> Node0x48052b0;
	Node0x48055d0 [shape=record,label="{pd_if.else.29|{<s0>T|<s1>F}}"];
	Node0x48055d0:s0 -> Node0x4806820;
	Node0x48055d0:s1 -> Node0x4805620;
	Node0x4805620 [shape=record,label="{pd_if.then.33|{<s0>T|<s1>F}}"];
	Node0x4805620:s0 -> Node0x4806780;
	Node0x4805620:s1 -> Node0x4806730;
	Node0x4806730 [shape=record,label="{pd_if.else.41}"];
	Node0x4806730 -> Node0x48067d0;
	Node0x4806780 [shape=record,label="{pd_if.then.35}"];
	Node0x4806780 -> Node0x48067d0;
	Node0x48067d0 [shape=record,label="{pd_while.cond.outer1.backedge}"];
	Node0x48067d0 -> Node0x4805350;
	Node0x4806820 [shape=record,label="{pd_if.else.44|{<s0>T|<s1>F}}"];
	Node0x4806820:s0 -> Node0x48068c0;
	Node0x4806820:s1 -> Node0x4806870;
	Node0x4806870 [shape=record,label="{pd_if.then.48}"];
	Node0x4806870 -> Node0x4806b40;
	Node0x48068c0 [shape=record,label="{pd_if.else.52|{<s0>T|<s1>F}}"];
	Node0x48068c0:s0 -> Node0x4806960;
	Node0x48068c0:s1 -> Node0x4806910;
	Node0x4806910 [shape=record,label="{pd_if.then.56}"];
	Node0x4806910 -> Node0x4806b40;
	Node0x4806960 [shape=record,label="{pd_if.else.59|{<s0>T|<s1>F}}"];
	Node0x4806960:s0 -> Node0x4806a00;
	Node0x4806960:s1 -> Node0x48069b0;
	Node0x48069b0 [shape=record,label="{pd_if.else.59.if.then.69_crit_edge}"];
	Node0x48069b0 -> Node0x4806af0;
	Node0x4806a00 [shape=record,label="{pd_lor.lhs.false|{<s0>T|<s1>F}}"];
	Node0x4806a00:s0 -> Node0x4806aa0;
	Node0x4806a00:s1 -> Node0x4806a50;
	Node0x4806a50 [shape=record,label="{pd_if.else.71}"];
	Node0x4806a50 -> Node0x4806b40;
	Node0x4806aa0 [shape=record,label="{pd_lor.lhs.false.if.then.69_crit_edge}"];
	Node0x4806aa0 -> Node0x4806af0;
	Node0x4806af0 [shape=record,label="{pd_if.then.69}"];
	Node0x4806af0 -> Node0x4806b40;
	Node0x4806b40 [shape=record,label="{pd_while.cond.backedge}"];
	Node0x4806b40 -> Node0x48053a0;
	Node0x4806b90 [shape=record,label="{pd_for.body|{<s0>T|<s1>F}}"];
	Node0x4806b90:s0 -> Node0x4806c30;
	Node0x4806b90:s1 -> Node0x4806be0;
	Node0x4806be0 [shape=record,label="{pd_for.body.cond.end_crit_edge}"];
	Node0x4806be0 -> Node0x4806c80;
	Node0x4806c30 [shape=record,label="{pd_cond.true}"];
	Node0x4806c30 -> Node0x4806c80;
	Node0x4806c80 [shape=record,label="{pd_cond.end}"];
	Node0x4806c80 -> Node0x4805490;
}
